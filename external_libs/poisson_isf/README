This package is based the contents of the paper 

L. Genovese, T. Deutsch, A. Neelov, S.Goedecker, G.Beylkin,
``Efficient solution of Poisson's equation with free boundary conditions''

that can be found in 

http://arxiv.org/abs/cond-mat/0605371

in published work that uses this routines, a citation to this paper would be very welcome.

Copyright (C) Luigi Genovese, Thierry Deutsch, CEA Grenoble, 2006
Copyright (C) Stefan Goedecker, Basel Univ, 2006
Copyright (C) GB Consulting 2006
This package is distributed under the terms of the
GNU General Public License, see http://www.gnu.org/copyleft/gpl.txt .

-------------------------------------------------------------------------

TEST EXECUTABLES

Four different executables can be generated by using the 'Makefile' file, just typing

make %NAME%

where %NAME% is one of the following

PSolver:

Runs the Poisson solver for a 3dim gaussian charge density on a grid with real dimensions indicated in the file 'dimensions'

Test_ser:

The same as PSolver for a grid of n^3 points, with n with different values from 18 to 60 

ParPSolver:

The same as PSolver, but in the parallel case (must be launched with the usual mpirun command)
real space dimensions must be indicated in the 'dimensions' file

Test_par: 

Comparison test between the serial version and the parallel one. Runs in parallel. The root process calculates a serial solver exactly as the 'PSolver' program, then a parallel run starts, like 'ParPSolver'. The output arrays are compared, as well as the hartree energy.
Again, the test charge density is a gaussian and the real dimensions are read in from 
the file 'dimensions'. 

In case of need of only serial executables (namely 'PSolver' and 'Test_par'), just modify the 'Makefile' file as follows

substitute

F95 = mpif90 -O 
F77 = mpif90 -O 

into

F95 = <name of your Fortran 95 compiler>  -O 
F77 = <name of your Fortran 95 compiler>  -O 

CORE ROUTINES

If you are interested in using the Poisson Solver inside other routines, the principal routines are

'Build_Kernel' 'PSolver_Kernel' (serial case)

'ParBuild_Kernel' 'ParPSolver_Kernel' (parallel case)

that can be found in the files
'Build_Kernel.f90' 'PSolver_Kernel.f90'
'pconv.f90'

all the files are commented and the role of each subroutine is described, including their arguments.
