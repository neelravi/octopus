# Makefile.in generated by automake 1.6 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
CC = @CC@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
GSL_CFLAGS = @GSL_CFLAGS@
GSL_CONFIG = @GSL_CONFIG@
GSL_LIBS = @GSL_LIBS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBTOOL = @LIBTOOL@
LIB_BLAS = @LIB_BLAS@
LIB_FFTW = @LIB_FFTW@
LIB_LAPACK = @LIB_LAPACK@
LIB_MPI = @LIB_MPI@
LINK = @LINK@
LN_S = @LN_S@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
PROGNAME = @PROGNAME@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
bin_PROGRAMS = @PROGNAME@ strength-function hs-from-mult hs-from-acc function-to-dx \
	nbo2xyz

EXTRA_PROGRAMS = octopus octopus-mpi octopus-1d octopus-1d-mpi octopus-pol octopus-pol-mpi

octopus_SOURCES = liboct.F90 global.F90 io.F90 pulpo.F90 units.F90 math.F90 \
	spline.F90 fft.F90 \
	ps_xc.F90 ps_kb.F90 tm.F90 hgh.F90 ps.F90 specie.F90 \
	atom.F90 mesh.F90 hartree.F90 out.F90 states.F90 xc.F90 \
	systm.F90 lasers.F90 h.F90 \
	eigen.F90 mix.F90 lcao.F90 scf.F90 unocc.F90 static_pol.F90 \
	geom_opt.F90 pes.F90 td.F90 run.F90 main.F90


noinst_HEADERS = \
	real.F90 complex.F90 undef.F90 mesh.F90 mesh_inc.F90\
	mesh1D.F90 mesh1D_create.F90 mesh1D_inc.F90 ps1D.F90 hartree1D.F90 \
	mesh3D.F90 mesh3D_create.F90 mesh3D_inc.F90 ps3D.F90 hartree3D.F90 \
	xc_pot.F90 xc_LDA.F90 xc_GGA.F90 xc_KLI.F90 xc_KLI_x.F90 \
	xc_KLI_SIC.F90 xc_HJU.F90 \
	h_inc.F90 h_external_pot.F90 h_forces.F90 \
	eigen_cg1.F90 eigen_cg2.F90 \
	states_inc.F90 states_kpoints.F90\
	pes_rc.F90 pes_mask.F90 \
	td_init.F90 td_rti.F90 td_rti3.F90 td_write.F90 td_calc.F90\
	mix_inc.F90 out_inc.F90


octopus_LDADD = ../liboct/liboct.a @LIB_FFTW@ @LIB_LAPACK@ @LIB_BLAS@ @GSL_LIBS@

# this has to be repeated...
octopus_mpi_SOURCES = $(octopus_SOURCES)
octopus_mpi_LDADD = $(octopus_LDADD) @LIB_MPI@
octopus_1d_SOURCES = $(octopus_SOURCES)
octopus_1d_LDADD = $(octopus_LDADD)
octopus_1d_mpi_SOURCES = $(octopus_SOURCES)
octopus_1d_mpi_LDADD = $(octopus_LDADD) @LIB_MPI@
octopus_pol_SOURCES = $(octopus_SOURCES)
octopus_pol_LDADD = $(octopus_LDADD)
octopus_pol_mpi_SOURCES = $(octopus_SOURCES)
octopus_pol_mpi_LDADD = $(octopus_LDADD) @LIB_MPI@

# now the utility programs
strength_function_SOURCES = global.F90 io.F90 liboct.F90 units.F90 spectrum.F90 strength_function.F90
strength_function_LDADD = ../liboct/liboct.a @GSL_LIBS@
hs_from_mult_SOURCES = global.F90 io.F90 liboct.F90 units.F90 spectrum.F90 hs_from_mult.F90
hs_from_mult_LDADD = ../liboct/liboct.a @GSL_LIBS@
hs_from_acc_SOURCES = global.F90 io.F90 liboct.F90 units.F90 spectrum.F90 hs_from_acc.F90
hs_from_acc_LDADD = ../liboct/liboct.a @GSL_LIBS@
function_to_dx_SOURCES = global.F90 io.F90 liboct.F90 units.F90 out.F90 spectrum.F90 specie.F90 atom.F90 \
                         ps.F90 spline.F90 math.F90 fft.F90 mesh.F90 states.F90 systm.F90 \
                         tm.F90 hgh.F90 ps_kb.F90 ps_xc.F90 mix.F90 dx.F90 function_to_dx.F90

function_to_dx_LDADD = ../liboct/liboct.a @LIB_FFTW@ @LIB_LAPACK@ @LIB_BLAS@ @GSL_LIBS@
nbo2xyz_SOURCES = global.F90 io.F90 liboct.F90 units.F90 atom.F90 nbo2xyz.F90
nbo2xyz_LDADD = ../liboct/liboct.a @GSL_LIBS@

# cleaning
CLEANFILES = *~ *.bak *.mod *.il *.d *.pc* config_F90.h
DISTCLEANFILES = Makefile.in dirs.h
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/liboct/config.h config.h
CONFIG_CLEAN_FILES =
EXTRA_PROGRAMS = octopus$(EXEEXT) octopus-mpi$(EXEEXT) \
	octopus-1d$(EXEEXT) octopus-1d-mpi$(EXEEXT) \
	octopus-pol$(EXEEXT) octopus-pol-mpi$(EXEEXT)
bin_PROGRAMS = @PROGNAME@ strength-function$(EXEEXT) \
	hs-from-mult$(EXEEXT) hs-from-acc$(EXEEXT) \
	function-to-dx$(EXEEXT) nbo2xyz$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_function_to_dx_OBJECTS = global.$(OBJEXT) io.$(OBJEXT) \
	liboct.$(OBJEXT) units.$(OBJEXT) out.$(OBJEXT) \
	spectrum.$(OBJEXT) specie.$(OBJEXT) atom.$(OBJEXT) ps.$(OBJEXT) \
	spline.$(OBJEXT) math.$(OBJEXT) fft.$(OBJEXT) mesh.$(OBJEXT) \
	states.$(OBJEXT) systm.$(OBJEXT) tm.$(OBJEXT) hgh.$(OBJEXT) \
	ps_kb.$(OBJEXT) ps_xc.$(OBJEXT) mix.$(OBJEXT) dx.$(OBJEXT) \
	function_to_dx.$(OBJEXT)
function_to_dx_OBJECTS = $(am_function_to_dx_OBJECTS)
function_to_dx_DEPENDENCIES = ../liboct/liboct.a
function_to_dx_LDFLAGS =
am_hs_from_acc_OBJECTS = global.$(OBJEXT) io.$(OBJEXT) liboct.$(OBJEXT) \
	units.$(OBJEXT) spectrum.$(OBJEXT) hs_from_acc.$(OBJEXT)
hs_from_acc_OBJECTS = $(am_hs_from_acc_OBJECTS)
hs_from_acc_DEPENDENCIES = ../liboct/liboct.a
hs_from_acc_LDFLAGS =
am_hs_from_mult_OBJECTS = global.$(OBJEXT) io.$(OBJEXT) liboct.$(OBJEXT) \
	units.$(OBJEXT) spectrum.$(OBJEXT) hs_from_mult.$(OBJEXT)
hs_from_mult_OBJECTS = $(am_hs_from_mult_OBJECTS)
hs_from_mult_DEPENDENCIES = ../liboct/liboct.a
hs_from_mult_LDFLAGS =
am_nbo2xyz_OBJECTS = global.$(OBJEXT) io.$(OBJEXT) liboct.$(OBJEXT) \
	units.$(OBJEXT) atom.$(OBJEXT) nbo2xyz.$(OBJEXT)
nbo2xyz_OBJECTS = $(am_nbo2xyz_OBJECTS)
nbo2xyz_DEPENDENCIES = ../liboct/liboct.a
nbo2xyz_LDFLAGS =
am_octopus_OBJECTS = liboct.$(OBJEXT) global.$(OBJEXT) io.$(OBJEXT) \
	pulpo.$(OBJEXT) units.$(OBJEXT) math.$(OBJEXT) spline.$(OBJEXT) \
	fft.$(OBJEXT) ps_xc.$(OBJEXT) ps_kb.$(OBJEXT) tm.$(OBJEXT) \
	hgh.$(OBJEXT) ps.$(OBJEXT) specie.$(OBJEXT) atom.$(OBJEXT) \
	mesh.$(OBJEXT) hartree.$(OBJEXT) out.$(OBJEXT) states.$(OBJEXT) \
	xc.$(OBJEXT) systm.$(OBJEXT) lasers.$(OBJEXT) h.$(OBJEXT) \
	eigen.$(OBJEXT) mix.$(OBJEXT) lcao.$(OBJEXT) scf.$(OBJEXT) \
	unocc.$(OBJEXT) static_pol.$(OBJEXT) geom_opt.$(OBJEXT) \
	pes.$(OBJEXT) td.$(OBJEXT) run.$(OBJEXT) main.$(OBJEXT)
octopus_OBJECTS = $(am_octopus_OBJECTS)
octopus_DEPENDENCIES = ../liboct/liboct.a
octopus_LDFLAGS =
am__objects_1 = liboct.$(OBJEXT) global.$(OBJEXT) io.$(OBJEXT) \
	pulpo.$(OBJEXT) units.$(OBJEXT) math.$(OBJEXT) spline.$(OBJEXT) \
	fft.$(OBJEXT) ps_xc.$(OBJEXT) ps_kb.$(OBJEXT) tm.$(OBJEXT) \
	hgh.$(OBJEXT) ps.$(OBJEXT) specie.$(OBJEXT) atom.$(OBJEXT) \
	mesh.$(OBJEXT) hartree.$(OBJEXT) out.$(OBJEXT) states.$(OBJEXT) \
	xc.$(OBJEXT) systm.$(OBJEXT) lasers.$(OBJEXT) h.$(OBJEXT) \
	eigen.$(OBJEXT) mix.$(OBJEXT) lcao.$(OBJEXT) scf.$(OBJEXT) \
	unocc.$(OBJEXT) static_pol.$(OBJEXT) geom_opt.$(OBJEXT) \
	pes.$(OBJEXT) td.$(OBJEXT) run.$(OBJEXT) main.$(OBJEXT)
am_octopus_1d_OBJECTS = $(am__objects_1)
octopus_1d_OBJECTS = $(am_octopus_1d_OBJECTS)
octopus_1d_DEPENDENCIES = ../liboct/liboct.a
octopus_1d_LDFLAGS =
am_octopus_1d_mpi_OBJECTS = $(am__objects_1)
octopus_1d_mpi_OBJECTS = $(am_octopus_1d_mpi_OBJECTS)
octopus_1d_mpi_DEPENDENCIES = ../liboct/liboct.a
octopus_1d_mpi_LDFLAGS =
am_octopus_mpi_OBJECTS = $(am__objects_1)
octopus_mpi_OBJECTS = $(am_octopus_mpi_OBJECTS)
octopus_mpi_DEPENDENCIES = ../liboct/liboct.a
octopus_mpi_LDFLAGS =
am_octopus_pol_OBJECTS = $(am__objects_1)
octopus_pol_OBJECTS = $(am_octopus_pol_OBJECTS)
octopus_pol_DEPENDENCIES = ../liboct/liboct.a
octopus_pol_LDFLAGS =
am_octopus_pol_mpi_OBJECTS = $(am__objects_1)
octopus_pol_mpi_OBJECTS = $(am_octopus_pol_mpi_OBJECTS)
octopus_pol_mpi_DEPENDENCIES = ../liboct/liboct.a
octopus_pol_mpi_LDFLAGS =
am_strength_function_OBJECTS = global.$(OBJEXT) io.$(OBJEXT) \
	liboct.$(OBJEXT) units.$(OBJEXT) spectrum.$(OBJEXT) \
	strength_function.$(OBJEXT)
strength_function_OBJECTS = $(am_strength_function_OBJECTS)
strength_function_DEPENDENCIES = ../liboct/liboct.a
strength_function_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/liboct -I.
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
DIST_SOURCES = $(function_to_dx_SOURCES) $(hs_from_acc_SOURCES) \
	$(hs_from_mult_SOURCES) $(nbo2xyz_SOURCES) $(octopus_SOURCES) \
	$(octopus_1d_SOURCES) $(octopus_1d_mpi_SOURCES) \
	$(octopus_mpi_SOURCES) $(octopus_pol_SOURCES) \
	$(octopus_pol_mpi_SOURCES) $(strength_function_SOURCES)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in config.h.in
SOURCES = $(function_to_dx_SOURCES) $(hs_from_acc_SOURCES) $(hs_from_mult_SOURCES) $(nbo2xyz_SOURCES) $(octopus_SOURCES) $(octopus_1d_SOURCES) $(octopus_1d_mpi_SOURCES) $(octopus_mpi_SOURCES) $(octopus_pol_SOURCES) $(octopus_pol_mpi_SOURCES) $(strength_function_SOURCES)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .F90 .o

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

config.h: stamp-h2
	@if test ! -f $@; then \
	  rm -f stamp-h2; \
	  $(MAKE) stamp-h2; \
	else :; fi

stamp-h2: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h2
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h

$(srcdir)/config.h.in:  $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/config.h.in

distclean-hdr:
	-rm -f config.h
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    p1=`echo "$$p1" | sed -e 's,^.*/,,'`; \
	    f=`echo $$p1|sed '$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  f=`echo "$$f" | sed -e 's,^.*/,,'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
function-to-dx$(EXEEXT): $(function_to_dx_OBJECTS) $(function_to_dx_DEPENDENCIES) 
	@rm -f function-to-dx$(EXEEXT)
	$(LINK) $(function_to_dx_LDFLAGS) $(function_to_dx_OBJECTS) $(function_to_dx_LDADD) $(LIBS)
hs-from-acc$(EXEEXT): $(hs_from_acc_OBJECTS) $(hs_from_acc_DEPENDENCIES) 
	@rm -f hs-from-acc$(EXEEXT)
	$(LINK) $(hs_from_acc_LDFLAGS) $(hs_from_acc_OBJECTS) $(hs_from_acc_LDADD) $(LIBS)
hs-from-mult$(EXEEXT): $(hs_from_mult_OBJECTS) $(hs_from_mult_DEPENDENCIES) 
	@rm -f hs-from-mult$(EXEEXT)
	$(LINK) $(hs_from_mult_LDFLAGS) $(hs_from_mult_OBJECTS) $(hs_from_mult_LDADD) $(LIBS)
nbo2xyz$(EXEEXT): $(nbo2xyz_OBJECTS) $(nbo2xyz_DEPENDENCIES) 
	@rm -f nbo2xyz$(EXEEXT)
	$(LINK) $(nbo2xyz_LDFLAGS) $(nbo2xyz_OBJECTS) $(nbo2xyz_LDADD) $(LIBS)
octopus$(EXEEXT): $(octopus_OBJECTS) $(octopus_DEPENDENCIES) 
	@rm -f octopus$(EXEEXT)
	$(LINK) $(octopus_LDFLAGS) $(octopus_OBJECTS) $(octopus_LDADD) $(LIBS)
octopus-1d$(EXEEXT): $(octopus_1d_OBJECTS) $(octopus_1d_DEPENDENCIES) 
	@rm -f octopus-1d$(EXEEXT)
	$(LINK) $(octopus_1d_LDFLAGS) $(octopus_1d_OBJECTS) $(octopus_1d_LDADD) $(LIBS)
octopus-1d-mpi$(EXEEXT): $(octopus_1d_mpi_OBJECTS) $(octopus_1d_mpi_DEPENDENCIES) 
	@rm -f octopus-1d-mpi$(EXEEXT)
	$(LINK) $(octopus_1d_mpi_LDFLAGS) $(octopus_1d_mpi_OBJECTS) $(octopus_1d_mpi_LDADD) $(LIBS)
octopus-mpi$(EXEEXT): $(octopus_mpi_OBJECTS) $(octopus_mpi_DEPENDENCIES) 
	@rm -f octopus-mpi$(EXEEXT)
	$(LINK) $(octopus_mpi_LDFLAGS) $(octopus_mpi_OBJECTS) $(octopus_mpi_LDADD) $(LIBS)
octopus-pol$(EXEEXT): $(octopus_pol_OBJECTS) $(octopus_pol_DEPENDENCIES) 
	@rm -f octopus-pol$(EXEEXT)
	$(LINK) $(octopus_pol_LDFLAGS) $(octopus_pol_OBJECTS) $(octopus_pol_LDADD) $(LIBS)
octopus-pol-mpi$(EXEEXT): $(octopus_pol_mpi_OBJECTS) $(octopus_pol_mpi_DEPENDENCIES) 
	@rm -f octopus-pol-mpi$(EXEEXT)
	$(LINK) $(octopus_pol_mpi_LDFLAGS) $(octopus_pol_mpi_OBJECTS) $(octopus_pol_mpi_LDADD) $(LIBS)
strength-function$(EXEEXT): $(strength_function_OBJECTS) $(strength_function_DEPENDENCIES) 
	@rm -f strength-function$(EXEEXT)
	$(LINK) $(strength_function_LDFLAGS) $(strength_function_OBJECTS) $(strength_function_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir)$$dir \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS) config.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


# how to compile a F90 file :)
.F90.o:
	@F90CPP@ -DSHARE_OCTOPUS='"${pkgdatadir}"' $< > $*.f90
#	sed 's/^#/!/' $*.f90 >lixo; mv -f lixo $*.f90
	@F90@ @F90FLAGS@ -c -o $@ $*.f90
	@rm -f $*.f90

# how to generate config_F90.h
liboct.F90: config_F90.h
global.F90: config_F90.h
config_F90.h: config.h
	sed 's%/\*%!%g; s%\*/%%g' config.h >config_F90.h
../liboct/liboct.a:
	(cd ../liboct; $(MAKE))

# dependencies. Please update consistently
mesh.o: mesh1D.F90 mesh1D_create.F90 mesh1D_inc.F90 \
	mesh3D.F90 mesh3D_create.F90 mesh3D_inc.F90 mesh_inc.F90
ps.o: ps1D.F90 ps3D.F90
hartree.o: hartree1D.F90 hartree3D.F90
xc.o: xc_pot.F90 xc_LDA.F90 xc_GGA.F90 xc_KLI.F90 xc_KLI_x.F90
xc.o: xc_KLI_SIC.F90 xc_HJU.F90
h.o: h_inc.F90 h_external_pot.F90 h_forces.F90
eigen.o: eigen_cg1.F90 eigen_cg2.F90
states.o: states_inc.F90
pes.o: pes_rc.F90 pes_mask.F90
td.o: td_init.F90 td_rti.F90 td_rti3.F90 td_write.F90 td_calc.F90
mix.o: mix_inc.F90
out.o: out_inc.F90
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
