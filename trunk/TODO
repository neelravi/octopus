* ion movements
  - do BO simulation run mode
  - clean up td code so that it restarts with ions moving and to use the
    same module as the static BO simulation
  - do a geometry optimization runmode (using the GSL minimization
    functions)

* PPs
  - clean up messy code. maybe split ps.F90 in several parts
  - fix stuff when using solely local potential (e.g. quantum dot).
    Neither the forces, nor the local part in Fourier space were working
    properly.
  - include GTH PPs [PRB 54, 1703 (1996)] 
  
* 1D stuff
  - identify common code between 1D and 3D (there is a lot in the mesh
    module), and put it in a common file in order to avoid duplication
  - general cleanup to simplify the code (too many ifdefs)

* spin
  - non-collinear magnetism
  - spin-orbit coupling (should be to add 10 lines in hpsi after the
    previous point is done)
  - check code in spin polarized systems (perhaps Al2)

* polimers/photemission/high harmonic generation
  - do it
  
* netcdf
  - add support for PPs (should be trivial, one just has to look at
  vpsbtocdf, and copy the necessary stuff)
  - possibility of reading/writing all binary files in ascii/netcdf
    
* time dependent
  - fix velocity gauge for non-local PPs
  - check and complete spli-operator propagator (method 3)

* small things
  - add #ifdef HAVE_FFTW, etc everywhere.

For polymers:
  change the occupancies in states_init, states_fermi
  add ks in states_init, Hpsi
  change mesh in mesh3D_create
  change boundary conditions in mesh3D_derivatives
  energy calculation in hamiltonian_energy
  change density calculation in calcdens
For non-collinear magnetism
  The off-diagonals of the density can be complex. Look in mix.F90
  handle ispin=4 properly in xc_LDA.F90
  check how the energy (epot) is calculated (hamiltonian_setup)
