=head1 NAME

run_regression.pl - Script to create and run Octopus regression tests

=head1 SYNOPSIS

=over

=item B<run_regression.pl> [ option ]... [ file ]... 

=back

=head1 DESCRIPTION

This script can be used to generate and run Octopus regression tests.

=over

=item B<-n>

Dry run. Don't run the test. Only print what would be executed.

=item B<-v>

Run in verbose mode. Useful for debugging the script.

=item B<-h>

Show a brief summary of command line options.

=item B<-e> I<file>

Specify the name of the Octopus executable. The default is B<octopus>.

=item B<-c> I<file>

Create a template for a Octopus regression test. This should always be used if you
create a new regression test.

=item B<-f> I<file>

This option specifies the input file for a regression test.

=item B<-d> I<directory>

Use I<directory> as working directory. The default is a randomly generated directory in /tmp.

=item B<-i>

Print content of the octopus inputfile which is used for the current test to stdout.

=item B<-p>

Preserve working directory. Don't clean up the temporary working directory after the run.

=back 

=head1 EXAMPLES

To create a template for a regression test run e.g.

	run_regression.pl -c finite_systems_3d/sodium.test

Running a test can be achieved with

	run_regression.pl -f finite_systems_3d/sodium.test

If a test run fails it might be useful for bug tracing to preserve the working directory
of this run and to print out the input file

 	run_regression.pl -pi -f finite_systems_3d/sodium.test

Run a MPI test with a local directory as working directory

	run_regression.pl -d./tmp -f benzene.test -e `pwd`/../src/octopus-mpi

=head1 AUTHOR

Heiko Appel
