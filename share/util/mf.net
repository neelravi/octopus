//
// time: Sat Jan 10 18:49:33 2004
//
// version: 3.2.0 (format), 4.3.2 (DX)
//
//
//
// macro reference (indirect): CPK /home/alberto/local/dx/CMSP_Linux/macros/CPK.net
//
// macro reference (direct): BallsAndSticks /home/alberto/local/dx/CMSP_Linux/macros/BallsAndSticks.net
include "BallsAndSticks.net"
//
// MODULE main
//
// comment: mf.net OpenDX network
// comment: =====================
// comment: 
// comment: This OpenDX network visualizes a given function output
// comment: by octopus or any of its auxiliary programs.
// comment: 
// comment: =====================
// comment: 
// comment: In this comment we give some short instructions to the
// comment: usage of the OpenDX network "mf.net".
// comment: 
// comment: One prerrequisite you should have for the usage of it
// comment: is knowledge of OpenDX at "user" level. For this purpose
// comment: you only have to follow the Tutorial I of OpenDX. No
// comment: "devoloper" knowledge of OpenDX is necessary (that is,
// comment: you do not need how to build networks). Tutorial I will
// comment: show you the basics -- manipulating the image, rotating it,
// comment: etc.
// comment: 
// comment: =====================
// comment: 
// comment: 0. Make a copy of "mf.net" and "mf.cfg" in the directory
// comment: you want to work in (this is not strictly necessary, but
// comment: will permit you to overwrite the program if you wish).
// comment: 
// comment: 1. Run OpenDX:
// comment: 
// comment: prompt > dx
// comment: 
// comment: The main DataExplorer window is displayed.
// comment: 
// comment: 2. In the main DataExplorer window, select "Run Visual
// comment: Programs", and then choose "mf.net". At least two
// comment: windows open, one of them called something like
// comment: "Data Explorer: /whatever_path/mf.net", and the other one
// comment: called "Control Panel".
// comment: 
// comment: 3. This comment may be accessed from the main window,
// comment: selecting [Help => Application Comment]. So if you
// comment: are reading this, you probably have done all the
// comment: previous steps.
// comment: 
// comment: 4. The first step is selecting the function that is
// comment: going to be plotted. The selector for the function is
// comment: the first item in the Control Panel: "Select the
// comment: function to plot", which initially is set to null.
// comment: You may select any of *.dx files built by octopus.
// comment: 
// comment: 5. Once the function is specified, it will be imported
// comment: by DX. Nothing will be plotted yet. However, a file
// comment: called "dxstat.filename" will be written, with some
// comment: information about the file.
// comment: 
// comment: 6. The second step should be specifying any operation
// comment: that you may want to perform on the function before
// comment: plotting. That may be done in the second item of the
// comment: Control Panel, "Expression". There you may, for example,
// comment: calculate the logarithm of the square of the function,
// comment: by setting it to: "log10(a*a+1e-10)". You may
// comment: also leave the function as it is, by just setting "a".
// comment: (The letter "a" stands for the imported function)
// comment: 
// comment: 7. The next section of the control panel permits the
// comment: visualization of a isosurface of the function. For that
// comment: purpose you have to activate it by clicking on
// comment: the "Show isosurface" toggle. An image window will
// comment: show up with the isosurface. You may manipulate it
// comment: as you wish, by making use of the "Options" menu of
// comment: the "Isosurface" image window.
// comment: 
// comment: 8. The Control Panel allows to change the way in which
// comment: the isosurface is plotted. For example, you may change
// comment: the value of the isosurface ("Isosurface value"), the
// comment: color, and the opacity of the color. You may also
// comment: set the color by mapping another function, by
// comment: toggling on the "Map isosurface" option. In that case,
// comment: a new menu will show up, "Mapping function". There you
// comment: may select the function to be mapped (for example, 
// comment: mapping the potential on one density isosurface). You
// comment: may control the colouring by activating a colormap
// comment: ("Mapping function colormap"). You may also show one
// comment: colorbar on the graph to map the values of the mapped
// comment: function with the colors.
// comment: 
// comment: 9. Then you may also visualize a color map of some slab
// comment: of the function, by activating the "Show slab" toggle.
// comment: You will see a new image window, "Slab", popping up.
// comment: This slab will also be shown on the isosurface window,
// comment: if it is active, so that you may see how the slab is placed
// comment: in the 3D world. To control the colors of the slab, you may
// comment: activate one colormap control by toggling on the
// comment: "Show slab colormap" control. On the slab you may depict
// comment: some contour plots, by setting the "Number of contour
// comment: plots" to a non null number. By default the plane of the
// comment: slab will be the "z=0" plane. This can be changed by
// comment: changing the "Slab dimension" menu.
// comment: 
// comment: 10. A balls and sticks model of the geometruy of the 
// comment: molecule can be shown by specifying a "pdb" file on the
// comment: lower part of the Control Panel, in the file selector
// comment: "Select the file with the geometry". You also have to
// comment: toggle on the "Show geometry" selector. Some control
// comment: on the appearance of the model can be gained by toggling
// comment: on the "Details..." selector. 
// page assignment: Geometry	order=9, windowed=0, showing=0
// page assignment: Import	order=2, windowed=0, showing=0
// page assignment: ImportN	order=3, windowed=0, showing=1
// page assignment: Iso_II	order=6, windowed=0, showing=0
// page assignment: Isosurface	order=5, windowed=0, showing=0
// page assignment: Statistics	order=4, windowed=0, showing=0
// page assignment: mapped_data	order=10, windowed=0, showing=0
// page assignment: slab	order=7, windowed=0, showing=0
// page assignment: slab_II	order=8, windowed=0, showing=0
// workspace: width = 1143, height = 655
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node Toggle[4]: x = 122, y = 0, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_4"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Geometry
    // toggle : 0
    //
    // 
    // node FileSelector[2]: x = 392, y = 56, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: Geometry
    //
    // 
    // node Route[6]: x = 241, y = 47, inputs = 2, outputs = 2, label = Route
    // page group: Geometry
    //
main_Route_6_out_1,
main_Route_6_out_2 = 
    Route(
    main_Toggle_4_out_1,
    main_FileSelector_2_out_1
    ) [instance: 6, cache: 1];
    // 
    // node ImportStructure[1]: x = 229, y = 136, inputs = 2, label = ImportStructure
    // page group: Geometry
    //
main_ImportStructure_1_out_1 = 
    ImportStructure(
    main_Route_6_out_1,
    main_ImportStructure_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[4]: x = 441, y = 138, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_4"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.6 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 5.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 1.6 
    // page group: Geometry
    //
    // 
    // node AddBonds[1]: x = 249, y = 213, inputs = 2, label = AddBonds
    // page group: Geometry
    //
main_AddBonds_1_out_1 = 
    AddBonds(
    main_ImportStructure_1_out_1,
    main_Scalar_4_out_1
    ) [instance: 1, cache: 1];
    // 
    // node String[3]: x = 441, y = 223, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "default"
    // page group: Geometry
    //
    // 
    // node AddColors[1]: x = 257, y = 289, inputs = 2, label = AddColors
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "default"
    // page group: Geometry
    //
main_AddColors_1_out_1 = 
    AddColors(
    main_AddBonds_1_out_1,
    main_String_3_out_1
    ) [instance: 1, cache: 1];
    // 
    // node String[4]: x = 443, y = 328, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "default"
    // page group: Geometry
    //
    // 
    // node AddRadii[1]: x = 269, y = 364, inputs = 2, label = AddRadii
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "default"
    // page group: Geometry
    //
main_AddRadii_1_out_1 = 
    AddRadii(
    main_AddColors_1_out_1,
    main_String_4_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[5]: x = 104, y = 360, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_5"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.25 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.25 
    // page group: Geometry
    //
    // 
    // node Integer[3]: x = 109, y = 287, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_3"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 20 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 50
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 20 
    // page group: Geometry
    //
    // 
    // node String[5]: x = 96, y = 217, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = NULL
    // page group: Geometry
    //
    // 
    // node Scalar[6]: x = 92, y = 69, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_6"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.2 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 0.5
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.2 
    // page group: Geometry
    //
    // 
    // node Integer[4]: x = 89, y = 149, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_4"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 20 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 3
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 50
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 20 
    // page group: Geometry
    //
    // 
    // node BallsAndSticks[1]: x = 200, y = 451, inputs = 8, label = BallsAndSticks
    // input[2]: defaulting = 0, visible = 1, type = 1, value = 1
    // input[3]: defaulting = 1, visible = 1, type = 5, value = 0.2
    // input[4]: defaulting = 1, visible = 1, type = 1, value = 8
    // input[5]: defaulting = 1, visible = 1, type = 32, value = "grey"
    // input[6]: defaulting = 0, visible = 1, type = 1, value = 2
    // input[7]: defaulting = 1, visible = 1, type = 16777245, value = {0.2}
    // input[8]: defaulting = 1, visible = 1, type = 1, value = 50
    // page group: Geometry
    //
main_BallsAndSticks_1_out_1 = 
    BallsAndSticks(
    main_AddRadii_1_out_1,
    main_BallsAndSticks_1_in_2,
    main_Scalar_5_out_1,
    main_Integer_3_out_1,
    main_String_5_out_1,
    main_BallsAndSticks_1_in_6,
    main_Scalar_6_out_1,
    main_Integer_4_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Selector[1]: x = 55, y = 29, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "z" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 2 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "x" "y" "z" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2 }
    // output[1]: visible = 1, type = 29, value = 2 
    // output[2]: visible = 1, type = 32, value = "z" 
    // page group: slab
    //
    // 
    // node Compute[5]: x = 544, y = 24, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0+1"
    // page group: slab
    // expression: value = a+1
    // name[2]: value = a
    //
main_Compute_5_out_1 = 
    Compute(
    main_Compute_5_in_1,
    main_Selector_1_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Transmitter[16]: x = 511, y = 146, inputs = 1, label = slab_dim
    // page group: slab
    //
slab_dim = main_Compute_5_out_1;
    // 
    // node Receiver[12]: x = 293, y = 265, inputs = 1, label = slab_dim
    // page group: slab_II
    //
main_Receiver_12_out_1[cache: 0] = slab_dim;
    // 
    // node Toggle[2]: x = 148, y = 308, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_2"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: slab
    // toggle : 0
    //
    // 
    // node String[6]: x = 50, y = 555, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "a"
    // page group: ImportN
    //
    // 
    // node FileSelector[1]: x = 40, y = 9, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: Import
    //
    // 
    // node Inquire[8]: x = 50, y = 100, inputs = 3, label = Inquire
    // page group: Import
    //
main_Inquire_8_out_1 = 
    Inquire(
    main_FileSelector_1_out_1,
    main_Inquire_8_in_2,
    main_Inquire_8_in_3
    ) [instance: 8, cache: 1];
    // 
    // node Compute[20]: x = 52, y = 190, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?0:1"
    // page group: Import
    // expression: value = a==1?0:1
    // name[2]: value = a
    //
main_Compute_20_out_1 = 
    Compute(
    main_Compute_20_in_1,
    main_Inquire_8_out_1
    ) [instance: 20, cache: 1];
    // 
    // node Route[5]: x = 74, y = 280, inputs = 2, outputs = 2, label = Route
    // page group: Import
    //
main_Route_5_out_1,
main_Route_5_out_2 = 
    Route(
    main_Compute_20_out_1,
    main_FileSelector_1_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Import[1]: x = 74, y = 370, inputs = 6, label = Import
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "dx"
    // page group: Import
    //
main_Import_1_out_1 = 
    Import(
    main_Route_5_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[30]: x = 78, y = 464, inputs = 1, label = a
    // page group: Import
    //
a = main_Import_1_out_1;
    // 
    // node Receiver[24]: x = 32, y = 382, inputs = 1, label = a
    // page group: ImportN
    //
main_Receiver_24_out_1[cache: 0] = a;
    // 
    // node FileSelector[7]: x = 201, y = 4, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: ImportN
    //
    // 
    // node Inquire[11]: x = 189, y = 98, inputs = 3, label = Inquire
    // page group: ImportN
    //
main_Inquire_11_out_1 = 
    Inquire(
    main_FileSelector_7_out_1,
    main_Inquire_11_in_2,
    main_Inquire_11_in_3
    ) [instance: 11, cache: 1];
    // 
    // node Compute[32]: x = 163, y = 183, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?2:1"
    // page group: ImportN
    // expression: value = a==1?2:1
    // name[2]: value = a
    //
main_Compute_32_out_1 = 
    Compute(
    main_Compute_32_in_1,
    main_Inquire_11_out_1
    ) [instance: 32, cache: 1];
    // 
    // node Compute[25]: x = 238, y = 187, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?0:1"
    // page group: ImportN
    // expression: value = a==1?0:1
    // name[2]: value = a
    //
main_Compute_25_out_1 = 
    Compute(
    main_Compute_25_in_1,
    main_Inquire_11_out_1
    ) [instance: 25, cache: 1];
    // 
    // node Route[11]: x = 261, y = 266, inputs = 2, outputs = 2, label = Route
    // page group: ImportN
    //
main_Route_11_out_1,
main_Route_11_out_2 = 
    Route(
    main_Compute_25_out_1,
    main_FileSelector_7_out_1
    ) [instance: 11, cache: 1];
    // 
    // node Import[4]: x = 230, y = 347, inputs = 6, label = Import
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "dx"
    // page group: ImportN
    //
main_Import_4_out_1 = 
    Import(
    main_Route_11_out_1,
    main_Import_4_in_2,
    main_Import_4_in_3,
    main_Import_4_in_4,
    main_Import_4_in_5,
    main_Import_4_in_6
    ) [instance: 4, cache: 1];
    // 
    // node Switch[5]: x = 192, y = 480, inputs = 3, label = Switch
    // page group: ImportN
    //
main_Switch_5_out_1 = 
    Switch(
    main_Compute_32_out_1,
    main_Import_4_out_1,
    main_Receiver_24_out_1
    ) [instance: 5, cache: 1];
    // 
    // node FileSelector[8]: x = 398, y = 5, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: ImportN
    //
    // 
    // node Inquire[12]: x = 397, y = 96, inputs = 3, label = Inquire
    // page group: ImportN
    //
main_Inquire_12_out_1 = 
    Inquire(
    main_FileSelector_8_out_1,
    main_Inquire_12_in_2,
    main_Inquire_12_in_3
    ) [instance: 12, cache: 1];
    // 
    // node Compute[33]: x = 356, y = 172, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?2:1"
    // page group: ImportN
    // expression: value = a==1?2:1
    // name[2]: value = a
    //
main_Compute_33_out_1 = 
    Compute(
    main_Compute_33_in_1,
    main_Inquire_12_out_1
    ) [instance: 33, cache: 1];
    // 
    // node Compute[26]: x = 431, y = 168, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?0:1"
    // page group: ImportN
    // expression: value = a==1?0:1
    // name[2]: value = a
    //
main_Compute_26_out_1 = 
    Compute(
    main_Compute_26_in_1,
    main_Inquire_12_out_1
    ) [instance: 26, cache: 1];
    // 
    // node Route[12]: x = 458, y = 248, inputs = 2, outputs = 2, label = Route
    // page group: ImportN
    //
main_Route_12_out_1,
main_Route_12_out_2 = 
    Route(
    main_Compute_26_out_1,
    main_FileSelector_8_out_1
    ) [instance: 12, cache: 1];
    // 
    // node Import[5]: x = 391, y = 337, inputs = 6, label = Import
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "dx"
    // page group: ImportN
    //
main_Import_5_out_1 = 
    Import(
    main_Route_12_out_1,
    main_Import_5_in_2,
    main_Import_5_in_3,
    main_Import_5_in_4,
    main_Import_5_in_5,
    main_Import_5_in_6
    ) [instance: 5, cache: 1];
    // 
    // node Switch[6]: x = 390, y = 473, inputs = 3, label = Switch
    // page group: ImportN
    //
main_Switch_6_out_1 = 
    Switch(
    main_Compute_33_out_1,
    main_Import_5_out_1,
    main_Receiver_24_out_1
    ) [instance: 6, cache: 1];
    // 
    // node FileSelector[9]: x = 632, y = 3, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: ImportN
    //
    // 
    // node Inquire[13]: x = 629, y = 103, inputs = 3, label = Inquire
    // page group: ImportN
    //
main_Inquire_13_out_1 = 
    Inquire(
    main_FileSelector_9_out_1,
    main_Inquire_13_in_2,
    main_Inquire_13_in_3
    ) [instance: 13, cache: 1];
    // 
    // node Compute[34]: x = 574, y = 187, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?2:1"
    // page group: ImportN
    // expression: value = a==1?2:1
    // name[2]: value = a
    //
main_Compute_34_out_1 = 
    Compute(
    main_Compute_34_in_1,
    main_Inquire_13_out_1
    ) [instance: 34, cache: 1];
    // 
    // node Compute[27]: x = 654, y = 191, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?0:1"
    // page group: ImportN
    // expression: value = a==1?0:1
    // name[2]: value = a
    //
main_Compute_27_out_1 = 
    Compute(
    main_Compute_27_in_1,
    main_Inquire_13_out_1
    ) [instance: 27, cache: 1];
    // 
    // node Route[13]: x = 685, y = 261, inputs = 2, outputs = 2, label = Route
    // page group: ImportN
    //
main_Route_13_out_1,
main_Route_13_out_2 = 
    Route(
    main_Compute_27_out_1,
    main_FileSelector_9_out_1
    ) [instance: 13, cache: 1];
    // 
    // node Import[6]: x = 625, y = 337, inputs = 6, label = Import
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "dx"
    // page group: ImportN
    //
main_Import_6_out_1 = 
    Import(
    main_Route_13_out_1,
    main_Import_6_in_2,
    main_Import_6_in_3,
    main_Import_6_in_4,
    main_Import_6_in_5,
    main_Import_6_in_6
    ) [instance: 6, cache: 1];
    // 
    // node Switch[7]: x = 604, y = 481, inputs = 3, label = Switch
    // page group: ImportN
    //
main_Switch_7_out_1 = 
    Switch(
    main_Compute_34_out_1,
    main_Import_6_out_1,
    main_Receiver_24_out_1
    ) [instance: 7, cache: 1];
    // 
    // node FileSelector[10]: x = 855, y = 13, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: ImportN
    //
    // 
    // node Inquire[14]: x = 847, y = 99, inputs = 3, label = Inquire
    // page group: ImportN
    //
main_Inquire_14_out_1 = 
    Inquire(
    main_FileSelector_10_out_1,
    main_Inquire_14_in_2,
    main_Inquire_14_in_3
    ) [instance: 14, cache: 1];
    // 
    // node Compute[35]: x = 801, y = 193, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?2:1"
    // page group: ImportN
    // expression: value = a==1?2:1
    // name[2]: value = a
    //
main_Compute_35_out_1 = 
    Compute(
    main_Compute_35_in_1,
    main_Inquire_14_out_1
    ) [instance: 35, cache: 1];
    // 
    // node Compute[28]: x = 877, y = 187, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?0:1"
    // page group: ImportN
    // expression: value = a==1?0:1
    // name[2]: value = a
    //
main_Compute_28_out_1 = 
    Compute(
    main_Compute_28_in_1,
    main_Inquire_14_out_1
    ) [instance: 28, cache: 1];
    // 
    // node Route[14]: x = 895, y = 270, inputs = 2, outputs = 2, label = Route
    // page group: ImportN
    //
main_Route_14_out_1,
main_Route_14_out_2 = 
    Route(
    main_Compute_28_out_1,
    main_FileSelector_10_out_1
    ) [instance: 14, cache: 1];
    // 
    // node Import[7]: x = 858, y = 345, inputs = 6, label = Import
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "dx"
    // page group: ImportN
    //
main_Import_7_out_1 = 
    Import(
    main_Route_14_out_1,
    main_Import_7_in_2,
    main_Import_7_in_3,
    main_Import_7_in_4,
    main_Import_7_in_5,
    main_Import_7_in_6
    ) [instance: 7, cache: 1];
    // 
    // node Switch[8]: x = 822, y = 474, inputs = 3, label = Switch
    // page group: ImportN
    //
main_Switch_8_out_1 = 
    Switch(
    main_Compute_35_out_1,
    main_Import_7_out_1,
    main_Receiver_24_out_1
    ) [instance: 8, cache: 1];
    // 
    // node FileSelector[11]: x = 1052, y = 19, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: ImportN
    //
    // 
    // node Inquire[15]: x = 1058, y = 129, inputs = 3, label = Inquire
    // page group: ImportN
    //
main_Inquire_15_out_1 = 
    Inquire(
    main_FileSelector_11_out_1,
    main_Inquire_15_in_2,
    main_Inquire_15_in_3
    ) [instance: 15, cache: 1];
    // 
    // node Compute[36]: x = 986, y = 207, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?2:1"
    // page group: ImportN
    // expression: value = a==1?2:1
    // name[2]: value = a
    //
main_Compute_36_out_1 = 
    Compute(
    main_Compute_36_in_1,
    main_Inquire_15_out_1
    ) [instance: 36, cache: 1];
    // 
    // node Compute[29]: x = 1059, y = 207, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?0:1"
    // page group: ImportN
    // expression: value = a==1?0:1
    // name[2]: value = a
    //
main_Compute_29_out_1 = 
    Compute(
    main_Compute_29_in_1,
    main_Inquire_15_out_1
    ) [instance: 29, cache: 1];
    // 
    // node Route[15]: x = 1095, y = 274, inputs = 2, outputs = 2, label = Route
    // page group: ImportN
    //
main_Route_15_out_1,
main_Route_15_out_2 = 
    Route(
    main_Compute_29_out_1,
    main_FileSelector_11_out_1
    ) [instance: 15, cache: 1];
    // 
    // node Import[8]: x = 1063, y = 366, inputs = 6, label = Import
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "dx"
    // page group: ImportN
    //
main_Import_8_out_1 = 
    Import(
    main_Route_15_out_1,
    main_Import_8_in_2,
    main_Import_8_in_3,
    main_Import_8_in_4,
    main_Import_8_in_5,
    main_Import_8_in_6
    ) [instance: 8, cache: 1];
    // 
    // node Switch[9]: x = 1034, y = 479, inputs = 3, label = Switch
    // page group: ImportN
    //
main_Switch_9_out_1 = 
    Switch(
    main_Compute_36_out_1,
    main_Import_8_out_1,
    main_Receiver_24_out_1
    ) [instance: 9, cache: 1];
    // 
    // node Compute2[4]: x = 263, y = 573, inputs = 13, label = Compute2
    // input[1]: defaulting = 1, visible = 1, type = 32, value = "a"
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "a"
    // input[4]: defaulting = 1, visible = 1, type = 32, value = "b"
    // input[6]: defaulting = 1, visible = 1, type = 32, value = "c"
    // input[8]: defaulting = 1, visible = 1, type = 32, value = "d"
    // input[10]: defaulting = 1, visible = 1, type = 32, value = "e"
    // input[12]: defaulting = 1, visible = 1, type = 32, value = "f"
    // page group: ImportN
    //
main_Compute2_4_out_1 = 
    Compute2(
    main_String_6_out_1,
    main_Compute2_4_in_2,
    main_Receiver_24_out_1,
    main_Compute2_4_in_4,
    main_Switch_5_out_1,
    main_Compute2_4_in_6,
    main_Switch_6_out_1,
    main_Compute2_4_in_8,
    main_Switch_7_out_1,
    main_Compute2_4_in_10,
    main_Switch_8_out_1,
    main_Compute2_4_in_12,
    main_Switch_9_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[29]: x = 700, y = 593, inputs = 1, label = function
    // page group: ImportN
    //
function = main_Compute2_4_out_1;
    // 
    // node Receiver[4]: x = 294, y = 17, inputs = 1, label = function
    // page group: slab
    //
main_Receiver_4_out_1[cache: 0] = function;
    // 
    // node Route[3]: x = 175, y = 28, inputs = 2, outputs = 2, label = Route
    // page group: slab
    //
main_Route_3_out_1,
main_Route_3_out_2 = 
    Route(
    main_Toggle_2_out_1,
    main_Receiver_4_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Receiver[1]: x = 290, y = 1, inputs = 1, label = function
    // page group: Statistics
    //
main_Receiver_1_out_1[cache: 0] = function;
    // 
    // node Extract[4]: x = 77, y = 111, inputs = 2, label = Extract
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: Statistics
    //
main_Extract_4_out_1 = 
    Extract(
    main_Receiver_1_out_1,
    main_Extract_4_in_2
    ) [instance: 4, cache: 1];
    // 
    // node Inquire[3]: x = 61, y = 216, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "grid counts"
    // page group: Statistics
    //
main_Inquire_3_out_1 = 
    Inquire(
    main_Extract_4_out_1,
    main_Inquire_3_in_2,
    main_Inquire_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Compute[1]: x = 14, y = 296, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.x"
    // page group: Statistics
    // expression: value = a.x
    // name[2]: value = a
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Inquire_3_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[5]: x = 25, y = 400, inputs = 1, label = grid_x
    // page group: Statistics
    //
grid_x = main_Compute_1_out_1;
    // 
    // node Receiver[7]: x = 626, y = 49, inputs = 1, label = grid_x
    // page group: slab
    //
main_Receiver_7_out_1[cache: 0] = grid_x;
    // 
    // node Compute[2]: x = 94, y = 296, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.y"
    // page group: Statistics
    // expression: value = a.y
    // name[2]: value = a
    //
main_Compute_2_out_1 = 
    Compute(
    main_Compute_2_in_1,
    main_Inquire_3_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[6]: x = 104, y = 400, inputs = 1, label = grid_y
    // page group: Statistics
    //
grid_y = main_Compute_2_out_1;
    // 
    // node Receiver[8]: x = 680, y = 46, inputs = 1, label = grid_y
    // page group: slab
    //
main_Receiver_8_out_1[cache: 0] = grid_y;
    // 
    // node Compute[3]: x = 176, y = 297, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.z"
    // page group: Statistics
    // expression: value = a.z
    // name[2]: value = a
    //
main_Compute_3_out_1 = 
    Compute(
    main_Compute_3_in_1,
    main_Inquire_3_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[7]: x = 189, y = 401, inputs = 1, label = grid_z
    // page group: Statistics
    //
grid_z = main_Compute_3_out_1;
    // 
    // node Receiver[9]: x = 736, y = 43, inputs = 1, label = grid_z
    // page group: slab
    //
main_Receiver_9_out_1[cache: 0] = grid_z;
    // 
    // node Switch[3]: x = 633, y = 138, inputs = 4, label = Switch
    // page group: slab
    //
main_Switch_3_out_1 = 
    Switch(
    main_Compute_5_out_1,
    main_Receiver_7_out_1,
    main_Receiver_8_out_1,
    main_Receiver_9_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Sequencer[1]: x = 657, y = 232, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 1, visible = 1, type = 1, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 1, value = 37
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 1 37 1 1 37 1 }
    // page group: slab
    // vcr[1]: min = 1, max = 37, beg = 1, end = 37, cur = 5, inc = 1, loop = off, step = off, pal = off
    // window: position = (0.7139,0.0000), size = 0.2695x0.1042
    //
    main_Sequencer_1_in_3 = @frame;
main_Sequencer_1_out_1[cache: 2] = 
    Sequencer(
    main_Sequencer_1_in_1,
    main_Sequencer_1_in_2,
    main_Sequencer_1_in_3,
    main_Sequencer_1_in_4,
    main_Switch_3_out_1,
    main_Sequencer_1_in_6,
    main_Sequencer_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Compute[6]: x = 604, y = 303, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0-1"
    // page group: slab
    // expression: value = a-1
    // name[2]: value = a
    //
main_Compute_6_out_1 = 
    Compute(
    main_Compute_6_in_1,
    main_Sequencer_1_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Slab[2]: x = 292, y = 122, inputs = 4, label = Slab
    // input[2]: defaulting = 1, visible = 1, type = 1, value = 2
    // input[3]: defaulting = 1, visible = 1, type = 1, value = 30
    // page group: slab
    //
main_Slab_2_out_1 = 
    Slab(
    main_Route_3_out_1,
    main_Selector_1_out_1,
    main_Compute_6_out_1,
    main_Slab_2_in_4
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[19]: x = 181, y = 228, inputs = 1, label = slab_raw
    // page group: slab
    //
slab_raw = main_Slab_2_out_1;
    // 
    // node Receiver[11]: x = 432, y = 59, inputs = 1, label = slab_raw
    // page group: slab_II
    //
main_Receiver_11_out_1[cache: 0] = slab_raw;
    // 
    // node Inquire[7]: x = 416, y = 161, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "origin"
    // page group: slab_II
    //
main_Inquire_7_out_1 = 
    Inquire(
    main_Receiver_11_out_1,
    main_Inquire_7_in_2,
    main_Inquire_7_in_3
    ) [instance: 7, cache: 1];
    // 
    // node Compute[16]: x = 373, y = 263, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.x"
    // page group: slab_II
    // expression: value = a.x
    // name[2]: value = a
    //
main_Compute_16_out_1 = 
    Compute(
    main_Compute_16_in_1,
    main_Inquire_7_out_1
    ) [instance: 16, cache: 1];
    // 
    // node Compute[17]: x = 451, y = 261, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.y"
    // page group: slab_II
    // expression: value = a.y
    // name[2]: value = a
    //
main_Compute_17_out_1 = 
    Compute(
    main_Compute_17_in_1,
    main_Inquire_7_out_1
    ) [instance: 17, cache: 1];
    // 
    // node Compute[18]: x = 526, y = 263, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.z"
    // page group: slab_II
    // expression: value = a.z
    // name[2]: value = a
    //
main_Compute_18_out_1 = 
    Compute(
    main_Compute_18_in_1,
    main_Inquire_7_out_1
    ) [instance: 18, cache: 1];
    // 
    // node Switch[4]: x = 413, y = 369, inputs = 4, label = Switch
    // page group: slab_II
    //
main_Switch_4_out_1 = 
    Switch(
    main_Receiver_12_out_1,
    main_Compute_16_out_1,
    main_Compute_17_out_1,
    main_Compute_18_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[17]: x = 430, y = 464, inputs = 1, label = slab_pos
    // page group: slab_II
    //
slab_pos = main_Switch_4_out_1;
    // 
    // node Receiver[13]: x = 174, y = 130, inputs = 1, label = slab_pos
    // page group: slab
    //
main_Receiver_13_out_1[cache: 0] = slab_pos;
    // 
    // node Format[6]: x = 78, y = 127, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "%s = %g"
    // page group: slab
    //
main_Format_6_out_1 = 
    Format(
    main_Format_6_in_1,
    main_Selector_1_out_2,
    main_Receiver_13_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Caption[1]: x = 57, y = 224, inputs = 9, label = Caption
    // page group: slab
    //
main_Caption_1_out_1 = 
    Caption(
    main_Format_6_out_1,
    main_Caption_1_in_2,
    main_Caption_1_in_3,
    main_Caption_1_in_4,
    main_Caption_1_in_5,
    main_Caption_1_in_6,
    main_Caption_1_in_7,
    main_Caption_1_in_8,
    main_Caption_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[1]: x = 168, y = 33, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_1"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Isosurface
    // toggle : 0
    //
    // 
    // node Statistics[2]: x = 419, y = 128, inputs = 1, label = Statistics
    // page group: Statistics
    //
main_Statistics_2_out_1,
main_Statistics_2_out_2,
main_Statistics_2_out_3,
main_Statistics_2_out_4,
main_Statistics_2_out_5 = 
    Statistics(
    main_Receiver_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[3]: x = 484, y = 235, inputs = 1, label = min
    // page group: Statistics
    //
min = main_Statistics_2_out_4;
    // 
    // node Receiver[5]: x = 422, y = 87, inputs = 1, label = min
    // page group: slab
    //
main_Receiver_5_out_1[cache: 0] = min;
    // 
    // node Transmitter[4]: x = 525, y = 242, inputs = 1, label = max
    // page group: Statistics
    //
max = main_Statistics_2_out_5;
    // 
    // node Receiver[6]: x = 461, y = 84, inputs = 1, label = max
    // page group: slab
    //
main_Receiver_6_out_1[cache: 0] = max;
    // 
    // node Colormap[2]: x = 331, y = 240, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.65263158] [1.0 0.0] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_2"
    // input[7]: defaulting = 1, visible = 1, type = 5, value = 0.0
    // input[8]: defaulting = 1, visible = 1, type = 5, value = 0.24403083
    // input[9]: defaulting = 1, visible = 1, type = 1, value = 20
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { 0.0 0.24403083 }
    // input[17]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 0.24403083
    // input[19]: defaulting = 1, visible = 1, type = 32, value = "Slab colormap"
    // page group: slab
    // Colormap: title = Slab colormap
    // window: position = (0.2793,0.0000), size = 0.6348x0.5859
    //
main_Colormap_2_out_1[cache: 2],
main_Colormap_2_out_2[cache: 2] = 
    Colormap(
    main_Colormap_2_in_1,
    main_Colormap_2_in_2,
    main_Colormap_2_in_3,
    main_Colormap_2_in_4,
    main_Colormap_2_in_5,
    main_Slab_2_out_1,
    main_Receiver_5_out_1,
    main_Receiver_6_out_1,
    main_Colormap_2_in_9,
    main_Colormap_2_in_10,
    main_Colormap_2_in_11,
    main_Colormap_2_in_12,
    main_Colormap_2_in_13,
    main_Colormap_2_in_14,
    main_Colormap_2_in_15,
    main_Colormap_2_in_16,
    main_Colormap_2_in_17,
    main_Colormap_2_in_18,
    main_Colormap_2_in_19
    ) [instance: 2, cache: 1];
    // 
    // node Color[2]: x = 299, y = 331, inputs = 5, label = Color
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "red"
    // page group: slab
    //
main_Color_2_out_1 = 
    Color(
    main_Slab_2_out_1,
    main_Colormap_2_out_1,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node ColorBar[1]: x = 436, y = 336, inputs = 16, label = ColorBar
    // page group: slab
    //
main_ColorBar_1_out_1 = 
    ColorBar(
    main_Colormap_2_out_1,
    main_ColorBar_1_in_2,
    main_ColorBar_1_in_3,
    main_ColorBar_1_in_4,
    main_ColorBar_1_in_5,
    main_ColorBar_1_in_6,
    main_ColorBar_1_in_7,
    main_ColorBar_1_in_8,
    main_ColorBar_1_in_9,
    main_ColorBar_1_in_10,
    main_ColorBar_1_in_11,
    main_ColorBar_1_in_12,
    main_ColorBar_1_in_13,
    main_ColorBar_1_in_14,
    main_ColorBar_1_in_15,
    main_ColorBar_1_in_16
    ) [instance: 1, cache: 1];
    // 
    // node Integer[2]: x = 30, y = 44, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_2"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 3 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 50
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 3 
    // page group: slab_II
    //
    // 
    // node Compute[19]: x = 39, y = 144, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0>0?1:0"
    // page group: slab_II
    // expression: value = a>0?1:0
    // name[2]: value = a
    //
main_Compute_19_out_1 = 
    Compute(
    main_Compute_19_in_1,
    main_Integer_2_out_1
    ) [instance: 19, cache: 1];
    // 
    // node Route[1]: x = 87, y = 216, inputs = 2, outputs = 2, label = Route
    // page group: slab_II
    //
main_Route_1_out_1,
main_Route_1_out_2 = 
    Route(
    main_Compute_19_out_1,
    main_Receiver_11_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Isosurface[3]: x = 88, y = 336, inputs = 6, label = Isosurface
    // input[3]: defaulting = 1, visible = 1, type = 1, value = 5
    // page group: slab_II
    //
main_Isosurface_3_out_1 = 
    Isosurface(
    main_Route_1_out_1,
    main_Isosurface_3_in_2,
    main_Integer_2_out_1,
    main_Isosurface_3_in_4,
    main_Isosurface_3_in_5,
    main_Isosurface_3_in_6
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[21]: x = 94, y = 460, inputs = 1, label = contour_plots
    // page group: slab_II
    //
contour_plots = main_Isosurface_3_out_1;
    // 
    // node Receiver[15]: x = 428, y = 463, inputs = 1, label = contour_plots
    // page group: slab
    //
main_Receiver_15_out_1[cache: 0] = contour_plots;
    // 
    // node Collect[2]: x = 291, y = 443, inputs = 4, label = Collect
    // page group: slab
    //
main_Collect_2_out_1 = 
    Collect(
    main_Color_2_out_1,
    main_ColorBar_1_out_1,
    main_Caption_1_out_1,
    main_Receiver_15_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[20]: x = 293, y = 585, inputs = 1, label = slab
    // page group: slab
    //
slab = main_Collect_2_out_1;
    // 
    // node Receiver[10]: x = 61, y = 250, inputs = 1, label = slab
    // page group: Isosurface
    //
main_Receiver_10_out_1[cache: 0] = slab;
    // 
    // node Route[4]: x = 29, y = 338, inputs = 2, outputs = 2, label = Route
    // page group: Isosurface
    //
main_Route_4_out_1,
main_Route_4_out_2 = 
    Route(
    main_Toggle_1_out_1,
    main_Receiver_10_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[25]: x = 6, y = 30, inputs = 1, label = show_isosurface
    // page group: Isosurface
    //
show_isosurface = main_Toggle_1_out_1;
    // 
    // node Receiver[19]: x = 16, y = 14, inputs = 1, label = show_isosurface
    // page group: mapped_data
    //
main_Receiver_19_out_1[cache: 0] = show_isosurface;
    // 
    // node Toggle[6]: x = 163, y = 12, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_6"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: mapped_data
    // toggle : 0
    //
    // 
    // node FileSelector[3]: x = 470, y = 12, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: mapped_data
    //
    // 
    // node Inquire[9]: x = 541, y = 101, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "is null"
    // page group: mapped_data
    //
main_Inquire_9_out_1 = 
    Inquire(
    main_FileSelector_3_out_1,
    main_Inquire_9_in_2,
    main_Inquire_9_in_3
    ) [instance: 9, cache: 1];
    // 
    // node Compute[23]: x = 546, y = 179, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?0:1"
    // page group: mapped_data
    // expression: value = a==1?0:1
    // name[2]: value = a
    //
main_Compute_23_out_1 = 
    Compute(
    main_Compute_23_in_1,
    main_Inquire_9_out_1
    ) [instance: 23, cache: 1];
    // 
    // node Compute[22]: x = 70, y = 89, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*$1*$2"
    // page group: mapped_data
    // expression: value = a*b*c
    // name[2]: value = a
    // name[3]: value = b
    // name[4]: value = c
    //
main_Compute_22_out_1 = 
    Compute(
    main_Compute_22_in_1,
    main_Receiver_19_out_1,
    main_Toggle_6_out_1,
    main_Compute_23_out_1
    ) [instance: 22, cache: 1];
    // 
    // node Compute[21]: x = 62, y = 322, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?1:2"
    // page group: mapped_data
    // expression: value = a==1?1:2
    // name[2]: value = a
    //
main_Compute_21_out_1 = 
    Compute(
    main_Compute_21_in_1,
    main_Compute_22_out_1
    ) [instance: 21, cache: 1];
    // 
    // node Transmitter[24]: x = 46, y = 393, inputs = 1, label = map_or_not
    // page group: mapped_data
    //
map_or_not = main_Compute_21_out_1;
    // 
    // node Receiver[17]: x = 169, y = 242, inputs = 1, label = map_or_not
    // page group: Isosurface
    //
main_Receiver_17_out_1[cache: 0] = map_or_not;
    // 
    // node Receiver[2]: x = 424, y = 12, inputs = 1, label = function
    // page group: Isosurface
    //
main_Receiver_2_out_1[cache: 0] = function;
    // 
    // node Route[2]: x = 295, y = 78, inputs = 2, outputs = 2, label = Route
    // page group: Isosurface
    //
main_Route_2_out_1,
main_Route_2_out_2 = 
    Route(
    main_Toggle_1_out_1,
    main_Receiver_2_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Scalar[2]: x = 268, y = 170, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.08 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 0.228446
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 3
    // output[1]: visible = 1, type = 5, value = 0.08 
    // page group: Isosurface
    //
main_Scalar_2_out_1[cache: 2] = 
    Scalar(
    main_Scalar_2_in_1,
    main_Route_2_out_1,
    main_Scalar_2_in_3,
    main_Scalar_2_in_4,
    main_Scalar_2_in_5,
    main_Scalar_2_in_6,
    main_Scalar_2_in_7,
    main_Scalar_2_in_8,
    main_Scalar_2_in_9,
    main_Scalar_2_in_10,
    main_Scalar_2_in_11
    ) [instance: 2, cache: 1];
    // 
    // node Isosurface[1]: x = 366, y = 165, inputs = 6, label = Isosurface
    // page group: Isosurface
    //
main_Isosurface_1_out_1 = 
    Isosurface(
    main_Route_2_out_1,
    main_Scalar_2_out_1,
    main_Isosurface_1_in_3,
    main_Isosurface_1_in_4,
    main_Isosurface_1_in_5,
    main_Isosurface_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Route[8]: x = 470, y = 241, inputs = 2, outputs = 2, label = Route
    // page group: Isosurface
    //
main_Route_8_out_1,
main_Route_8_out_2 = 
    Route(
    main_Receiver_17_out_1,
    main_Isosurface_1_out_1
    ) [instance: 8, cache: 1];
    // 
    // node Transmitter[26]: x = 418, y = 326, inputs = 1, label = raw_isosurface
    // page group: Isosurface
    //
raw_isosurface = main_Route_8_out_1;
    // 
    // node Receiver[21]: x = 162, y = 24, inputs = 1, label = raw_isosurface
    // page group: Iso_II
    //
main_Receiver_21_out_1[cache: 0] = raw_isosurface;
    // 
    // node Route[7]: x = 409, y = 209, inputs = 2, outputs = 2, label = Route
    // page group: mapped_data
    //
main_Route_7_out_1,
main_Route_7_out_2 = 
    Route(
    main_Compute_22_out_1,
    main_FileSelector_3_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Import[2]: x = 401, y = 300, inputs = 6, label = Import
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "dx"
    // page group: mapped_data
    //
main_Import_2_out_1 = 
    Import(
    main_Route_7_out_1,
    main_Import_2_in_2,
    main_Import_2_in_3,
    main_Import_2_in_4,
    main_Import_2_in_5,
    main_Import_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[23]: x = 377, y = 400, inputs = 1, label = function_to_map
    // page group: mapped_data
    //
function_to_map = main_Import_2_out_1;
    // 
    // node Receiver[20]: x = 380, y = 22, inputs = 1, label = function_to_map
    // page group: Iso_II
    //
main_Receiver_20_out_1[cache: 0] = function_to_map;
    // 
    // node Map[2]: x = 266, y = 130, inputs = 4, label = Map
    // page group: Iso_II
    //
main_Map_2_out_1 = 
    Map(
    main_Receiver_21_out_1,
    main_Receiver_20_out_1,
    main_Map_2_in_3,
    main_Map_2_in_4
    ) [instance: 2, cache: 1];
    // 
    // node Colormap[3]: x = 249, y = 274, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.666667] [1.0 0.0] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_3"
    // input[7]: defaulting = 1, visible = 0, type = 5, value = -13.001743
    // input[8]: defaulting = 1, visible = 0, type = 5, value = -4.5772276
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 20
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { -13.001743 -4.5772276 }
    // input[17]: defaulting = 0, visible = 0, type = 5, value = -13.001743
    // input[18]: defaulting = 0, visible = 0, type = 5, value = -4.5772276
    // input[19]: defaulting = 1, visible = 0, type = 32, value = "Mapped function colormap"
    // page group: Iso_II
    // Colormap: title = Mapped function colormap
    // window: position = (0.3457,0.0130), size = 0.6348x0.5859
    //
main_Colormap_3_out_1[cache: 2],
main_Colormap_3_out_2[cache: 2] = 
    Colormap(
    main_Colormap_3_in_1,
    main_Colormap_3_in_2,
    main_Colormap_3_in_3,
    main_Colormap_3_in_4,
    main_Colormap_3_in_5,
    main_Map_2_out_1,
    main_Colormap_3_in_7,
    main_Colormap_3_in_8,
    main_Colormap_3_in_9,
    main_Colormap_3_in_10,
    main_Colormap_3_in_11,
    main_Colormap_3_in_12,
    main_Colormap_3_in_13,
    main_Colormap_3_in_14,
    main_Colormap_3_in_15,
    main_Colormap_3_in_16,
    main_Colormap_3_in_17,
    main_Colormap_3_in_18,
    main_Colormap_3_in_19
    ) [instance: 3, cache: 1];
    // 
    // node Scalar[7]: x = 343, y = 272, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_7"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.5 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.5 
    // page group: Iso_II
    //
    // 
    // node Color[42]: x = 213, y = 378, inputs = 5, label = Color
    // input[3]: defaulting = 1, visible = 1, type = 5, value = 0.5
    // page group: Iso_II
    //
main_Color_42_out_1 = 
    Color(
    main_Map_2_out_1,
    main_Colormap_3_out_1,
    main_Scalar_7_out_1,
    main_Color_42_in_4,
    main_Color_42_in_5
    ) [instance: 42, cache: 1];
    // 
    // node Toggle[8]: x = 420, y = 398, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_8"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Iso_II
    // toggle : 0
    //
    // 
    // node ColorBar[2]: x = 561, y = 386, inputs = 16, label = ColorBar
    // input[9]: defaulting = 0, visible = 0, type = 16777248, value = {"black"}
    // page group: Iso_II
    //
main_ColorBar_2_out_1 = 
    ColorBar(
    main_Colormap_3_out_1,
    main_ColorBar_2_in_2,
    main_ColorBar_2_in_3,
    main_ColorBar_2_in_4,
    main_ColorBar_2_in_5,
    main_ColorBar_2_in_6,
    main_ColorBar_2_in_7,
    main_ColorBar_2_in_8,
    main_ColorBar_2_in_9,
    main_ColorBar_2_in_10,
    main_ColorBar_2_in_11,
    main_ColorBar_2_in_12,
    main_ColorBar_2_in_13,
    main_ColorBar_2_in_14,
    main_ColorBar_2_in_15,
    main_ColorBar_2_in_16
    ) [instance: 2, cache: 1];
    // 
    // node Route[9]: x = 493, y = 446, inputs = 2, outputs = 2, label = Route
    // page group: Iso_II
    //
main_Route_9_out_1,
main_Route_9_out_2 = 
    Route(
    main_Toggle_8_out_1,
    main_ColorBar_2_out_1
    ) [instance: 9, cache: 1];
    // 
    // node Collect[3]: x = 315, y = 514, inputs = 2, label = Collect
    // page group: Iso_II
    //
main_Collect_3_out_1 = 
    Collect(
    main_Color_42_out_1,
    main_Route_9_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[27]: x = 290, y = 602, inputs = 1, label = coloured_isosurface
    // page group: Iso_II
    //
coloured_isosurface = main_Collect_3_out_1;
    // 
    // node Receiver[22]: x = 418, y = 388, inputs = 1, label = coloured_isosurface
    // page group: Isosurface
    //
main_Receiver_22_out_1[cache: 0] = coloured_isosurface;
    // 
    // node String[2]: x = 716, y = 195, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "red"
    // page group: Isosurface
    //
    // 
    // node Scalar[3]: x = 771, y = 275, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.38 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.38 
    // page group: Isosurface
    //
    // 
    // node Color[1]: x = 679, y = 326, inputs = 5, label = Color
    // page group: Isosurface
    //
main_Color_1_out_1 = 
    Color(
    main_Route_8_out_2,
    main_String_2_out_1,
    main_Scalar_3_out_1,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[22]: x = 295, y = 547, inputs = 1, label = geometry
    // page group: Geometry
    //
geometry = main_BallsAndSticks_1_out_1;
    // 
    // node Receiver[16]: x = 505, y = 551, inputs = 1, label = geometry
    // page group: Isosurface
    //
main_Receiver_16_out_1[cache: 0] = geometry;
    // 
    // node Collect[1]: x = 294, y = 556, inputs = 4, label = Collect
    // page group: Isosurface
    //
main_Collect_1_out_1 = 
    Collect(
    main_Route_4_out_1,
    main_Receiver_22_out_1,
    main_Color_1_out_1,
    main_Receiver_16_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Inquire[4]: x = 590, y = 237, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "deltas"
    // page group: Statistics
    //
main_Inquire_4_out_1 = 
    Inquire(
    main_Receiver_1_out_1,
    main_Inquire_4_in_2,
    main_Inquire_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Select[1]: x = 805, y = 309, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 1, value = 0
    // page group: Statistics
    //
main_Select_1_out_1 = 
    Select(
    main_Inquire_4_out_1,
    main_Select_1_in_2,
    main_Select_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Compute[11]: x = 799, y = 383, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.0"
    // page group: Statistics
    // expression: value = a.0
    // name[2]: value = a
    //
main_Compute_11_out_1 = 
    Compute(
    main_Compute_11_in_1,
    main_Select_1_out_1
    ) [instance: 11, cache: 1];
    // 
    // node Select[2]: x = 865, y = 305, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 1, value = 1
    // page group: Statistics
    //
main_Select_2_out_1 = 
    Select(
    main_Inquire_4_out_1,
    main_Select_2_in_2,
    main_Select_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Compute[12]: x = 878, y = 382, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.1"
    // page group: Statistics
    // expression: value = a.1
    // name[2]: value = a
    //
main_Compute_12_out_1 = 
    Compute(
    main_Compute_12_in_1,
    main_Select_2_out_1
    ) [instance: 12, cache: 1];
    // 
    // node Select[3]: x = 935, y = 311, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 1, value = 2
    // page group: Statistics
    //
main_Select_3_out_1 = 
    Select(
    main_Inquire_4_out_1,
    main_Select_3_in_2,
    main_Select_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Compute[13]: x = 956, y = 384, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.2"
    // page group: Statistics
    // expression: value = a.2
    // name[2]: value = a
    //
main_Compute_13_out_1 = 
    Compute(
    main_Compute_13_in_1,
    main_Select_3_out_1
    ) [instance: 13, cache: 1];
    // 
    // node Toggle[9]: x = 356, y = 30, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_9"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Import
    // toggle : 0
    //
    // 
    // node Compute[30]: x = 421, y = 207, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?2:1"
    // page group: Import
    // expression: value = a==1?2:1
    // name[2]: value = a
    //
main_Compute_30_out_1 = 
    Compute(
    main_Compute_30_in_1,
    main_Toggle_9_out_1
    ) [instance: 30, cache: 1];
    // 
    // node Extract[3]: x = 305, y = 114, inputs = 2, label = Extract
    // page group: Statistics
    //
main_Extract_3_out_1 = 
    Extract(
    main_Receiver_1_out_1,
    main_Extract_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[8]: x = 185, y = 280, inputs = 1, label = function_name
    // page group: Import
    //
function_name = main_FileSelector_1_out_2;
    // 
    // node Receiver[3]: x = 256, y = 404, inputs = 1, label = function_name
    // page group: Statistics
    //
main_Receiver_3_out_1[cache: 0] = function_name;
    // 
    // node Format[3]: x = 68, y = 507, inputs = 4, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "Number of grid points: [%d,%d,%d]"
    // page group: Statistics
    //
main_Format_3_out_1 = 
    Format(
    main_Format_3_in_1,
    main_Compute_1_out_1,
    main_Compute_2_out_1,
    main_Compute_3_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Format[5]: x = 433, y = 380, inputs = 4, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "Mean, min, max = %g,%g,%g"
    // page group: Statistics
    //
main_Format_5_out_1 = 
    Format(
    main_Format_5_in_1,
    main_Statistics_2_out_1,
    main_Statistics_2_out_4,
    main_Statistics_2_out_5
    ) [instance: 5, cache: 1];
    // 
    // node Inquire[2]: x = 298, y = 210, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "category"
    // page group: Statistics
    //
main_Inquire_2_out_1 = 
    Inquire(
    main_Extract_3_out_1,
    main_Inquire_2_in_2,
    main_Inquire_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Format[4]: x = 306, y = 299, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "The function is %s"
    // page group: Statistics
    //
main_Format_4_out_1 = 
    Format(
    main_Format_4_in_1,
    main_Inquire_2_out_1,
    main_Format_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Format[7]: x = 585, y = 384, inputs = 2, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "Deltas: %g"
    // page group: Statistics
    //
main_Format_7_out_1 = 
    Format(
    main_Format_7_in_1,
    main_Inquire_4_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Inquire[5]: x = 688, y = 239, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "origin"
    // page group: Statistics
    //
main_Inquire_5_out_1 = 
    Inquire(
    main_Receiver_1_out_1,
    main_Inquire_5_in_2,
    main_Inquire_5_in_3
    ) [instance: 5, cache: 1];
    // 
    // node Format[8]: x = 680, y = 393, inputs = 2, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "Origin: %g"
    // page group: Statistics
    //
main_Format_8_out_1 = 
    Format(
    main_Format_8_in_1,
    main_Inquire_5_out_1
    ) [instance: 8, cache: 1];
    // 
    // node Format[2]: x = 255, y = 511, inputs = 8, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "echo '%s\n**********\n%s\n%s\n%s\n%s\n%s'>dxstat.%s"
    // page group: Statistics
    //
main_Format_2_out_1 = 
    Format(
    main_Format_2_in_1,
    main_Receiver_3_out_1,
    main_Format_3_out_1,
    main_Format_5_out_1,
    main_Format_4_out_1,
    main_Format_7_out_1,
    main_Format_8_out_1,
    main_Receiver_3_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Image[1]: x = 160, y = 601, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_1"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.0524121 -0.0253785 0.0152077]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [1.71024 -3.6695 -50.6466]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 5.44694
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.750781
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0.039365 0.996741 -0.0704078]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 6.13518
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[22]: defaulting = 0, visible = 0, type = 32, value = "white"
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // input[42]: defaulting = 0, visible = 0, type = 32, value = "Isosurface"
    // page group: Isosurface
    // title: value = Isosurface
    // depth: value = 24
    // window: position = (0.0508,0.2695), size = 0.6387x0.6797
    // internal caching: 1
    //
main_Image_1_out_1,
main_Image_1_out_2,
main_Image_1_out_3 = 
    Image(
    main_Image_1_in_1,
    main_Collect_1_out_1,
    main_Image_1_in_3,
    main_Image_1_in_4,
    main_Image_1_in_5,
    main_Image_1_in_6,
    main_Image_1_in_7,
    main_Image_1_in_8,
    main_Image_1_in_9,
    main_Image_1_in_10,
    main_Image_1_in_11,
    main_Image_1_in_12,
    main_Image_1_in_13,
    main_Image_1_in_14,
    main_Image_1_in_15,
    main_Image_1_in_16,
    main_Image_1_in_17,
    main_Image_1_in_18,
    main_Image_1_in_19,
    main_Image_1_in_20,
    main_Image_1_in_21,
    main_Image_1_in_22,
    main_Image_1_in_23,
    main_Image_1_in_24,
    main_Image_1_in_25,
    main_Image_1_in_26,
    main_Image_1_in_27,
    main_Image_1_in_28,
    main_Image_1_in_29,
    main_Image_1_in_30,
    main_Image_1_in_31,
    main_Image_1_in_32,
    main_Image_1_in_33,
    main_Image_1_in_34,
    main_Image_1_in_35,
    main_Image_1_in_36,
    main_Image_1_in_37,
    main_Image_1_in_38,
    main_Image_1_in_39,
    main_Image_1_in_40,
    main_Image_1_in_41,
    main_Image_1_in_42,
    main_Image_1_in_43,
    main_Image_1_in_44,
    main_Image_1_in_45,
    main_Image_1_in_46,
    main_Image_1_in_47,
    main_Image_1_in_48,
    main_Image_1_in_49
    ) [instance: 1, cache: 1];
    // 
    // node Image[2]: x = 348, y = 585, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [6.19888e-06 -2.38419e-07 -6]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [6.19888e-06 -2.38419e-07 29.1437]
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 18.8334
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.872656
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 0, visible = 0, type = 5, value = 30.0
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[33]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[36]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // input[42]: defaulting = 0, visible = 0, type = 32, value = "Slab"
    // output[1]: visible = 0
    // output[2]: visible = 0
    // output[3]: visible = 0
    // page group: slab
    // title: value = Slab
    // depth: value = 24
    // window: position = (0.0781,0.1797), size = 0.6387x0.7812
    // internal caching: 1
    //
main_Image_2_out_1,
main_Image_2_out_2,
main_Image_2_out_3 = 
    Image(
    main_Image_2_in_1,
    main_Collect_2_out_1,
    main_Image_2_in_3,
    main_Image_2_in_4,
    main_Image_2_in_5,
    main_Image_2_in_6,
    main_Image_2_in_7,
    main_Image_2_in_8,
    main_Image_2_in_9,
    main_Image_2_in_10,
    main_Image_2_in_11,
    main_Image_2_in_12,
    main_Image_2_in_13,
    main_Image_2_in_14,
    main_Image_2_in_15,
    main_Image_2_in_16,
    main_Image_2_in_17,
    main_Image_2_in_18,
    main_Image_2_in_19,
    main_Image_2_in_20,
    main_Image_2_in_21,
    main_Image_2_in_22,
    main_Image_2_in_23,
    main_Image_2_in_24,
    main_Image_2_in_25,
    main_Image_2_in_26,
    main_Image_2_in_27,
    main_Image_2_in_28,
    main_Image_2_in_29,
    main_Image_2_in_30,
    main_Image_2_in_31,
    main_Image_2_in_32,
    main_Image_2_in_33,
    main_Image_2_in_34,
    main_Image_2_in_35,
    main_Image_2_in_36,
    main_Image_2_in_37,
    main_Image_2_in_38,
    main_Image_2_in_39,
    main_Image_2_in_40,
    main_Image_2_in_41,
    main_Image_2_in_42,
    main_Image_2_in_43,
    main_Image_2_in_44,
    main_Image_2_in_45,
    main_Image_2_in_46,
    main_Image_2_in_47,
    main_Image_2_in_48,
    main_Image_2_in_49
    ) [instance: 2, cache: 1];
    // 
    // node Toggle[3]: x = 641, y = 428, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_3"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: slab
    // toggle : 0
    //
    // 
    // node ManageColormapEditor[1]: x = 582, y = 519, inputs = 3, label = ManageColormapEditor
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Slab colormap"}
    // page group: slab
    //
    ManageColormapEditor(
    main_ManageColormapEditor_1_in_1,
    main_Toggle_3_out_1,
    main_ManageColormapEditor_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[7]: x = 597, y = 26, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_7"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Iso_II
    // toggle : 0
    //
    // 
    // node ManageColormapEditor[2]: x = 546, y = 112, inputs = 3, label = ManageColormapEditor
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Mapped function colormap"}
    // page group: Iso_II
    //
    ManageColormapEditor(
    main_ManageColormapEditor_2_in_1,
    main_Toggle_7_out_1,
    main_ManageColormapEditor_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Toggle[5]: x = 571, y = 454, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_5"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Geometry
    // toggle : 0
    //
    // 
    // node ManageControlPanel[1]: x = 484, y = 527, inputs = 2, label = ManageControlPanel
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Geometry details"}
    // page group: Geometry
    //
    ManageControlPanel(
    main_ManageControlPanel_1_in_1,
    main_Toggle_5_out_1
    ) [instance: 1, cache: 1];
    // 
    // node ManageControlPanel[2]: x = 252, y = 16, inputs = 2, label = ManageControlPanel
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Mapping function"}
    // page group: mapped_data
    //
    ManageControlPanel(
    main_ManageControlPanel_2_in_1,
    main_Toggle_6_out_1
    ) [instance: 2, cache: 1];
    // 
    // node ManageControlPanel[3]: x = 584, y = 115, inputs = 2, label = ManageControlPanel
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Multiple Functions Import"}
    // page group: Import
    //
    ManageControlPanel(
    main_ManageControlPanel_3_in_1,
    main_Toggle_9_out_1
    ) [instance: 3, cache: 1];
    // 
    // node ManageImageWindow[3]: x = 2, y = 484, inputs = 3, label = ManageImageWindow
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Slab"}
    // page group: slab
    //
    ManageImageWindow(
    main_ManageImageWindow_3_in_1,
    main_Toggle_2_out_1,
    main_ManageImageWindow_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node ManageImageWindow[4]: x = 78, y = 153, inputs = 3, label = ManageImageWindow
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Isosurface"}
    // page group: Isosurface
    //
    ManageImageWindow(
    main_ManageImageWindow_4_in_1,
    main_Toggle_1_out_1,
    main_ManageImageWindow_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node ManageSequencer[1]: x = 15, y = 561, inputs = 1, label = ManageSequencer
    // page group: slab
    //
    ManageSequencer(
    main_Toggle_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node System[2]: x = 317, y = 589, inputs = 1, label = System
    // page group: Statistics
    //
    System(
    main_Format_2_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[2]: x = 406, y = 246, inputs = 1, label = mean
    // page group: Statistics
    //
mean = main_Statistics_2_out_1;
    // 
    // node Transmitter[10]: x = 779, y = 491, inputs = 1, label = spacing_x
    // page group: Statistics
    //
spacing_x = main_Compute_11_out_1;
    // 
    // node Transmitter[11]: x = 867, y = 488, inputs = 1, label = spacing_y
    // page group: Statistics
    //
spacing_y = main_Compute_12_out_1;
    // 
    // node Transmitter[12]: x = 951, y = 487, inputs = 1, label = spacing_z
    // page group: Statistics
    //
spacing_z = main_Compute_13_out_1;
    // 
    // node Transmitter[13]: x = 648, y = 524, inputs = 1, label = origin
    // page group: Statistics
    //
origin = main_Inquire_5_out_1;
    // 
    // node Transmitter[18]: x = 655, y = 272, inputs = 1, label = slab_origin
    // page group: slab_II
    //
slab_origin = main_Inquire_7_out_1;
// network: end of macro body
CacheScene(main_Image_1_in_1, main_Image_1_out_1, main_Image_1_out_2);
CacheScene(main_Image_2_in_1, main_Image_2_out_1, main_Image_2_out_2);
}
main_Toggle_4_in_1 = "Toggle_4";
main_Toggle_4_in_2 = 0;
main_Toggle_4_in_3 = 0;
main_Toggle_4_in_4 = NULL;
main_Toggle_4_in_5 = NULL;
main_Toggle_4_in_6 = NULL;
main_Toggle_4_out_1 = 0;
main_FileSelector_2_out_1 = NULL;
main_Route_6_out_1 = NULL;
main_ImportStructure_1_in_2 = NULL;
main_ImportStructure_1_out_1 = NULL;
main_Scalar_4_in_1 = "Scalar_4";
main_Scalar_4_in_2 = NULL;
main_Scalar_4_in_3 = 1.6 ;
main_Scalar_4_in_4 = NULL;
main_Scalar_4_in_5 = NULL;
main_Scalar_4_in_6 = NULL;
main_Scalar_4_in_7 = NULL;
main_Scalar_4_in_8 = NULL;
main_Scalar_4_in_9 = NULL;
main_Scalar_4_in_10 = NULL;
main_Scalar_4_in_11 = NULL;
main_Scalar_4_out_1 = 1.6 ;
main_AddBonds_1_out_1 = NULL;
main_String_3_out_1 = "default";
main_AddColors_1_out_1 = NULL;
main_String_4_out_1 = "default";
main_AddRadii_1_out_1 = NULL;
main_Scalar_5_in_1 = "Scalar_5";
main_Scalar_5_in_2 = NULL;
main_Scalar_5_in_3 = 0.25 ;
main_Scalar_5_in_4 = NULL;
main_Scalar_5_in_5 = NULL;
main_Scalar_5_in_6 = NULL;
main_Scalar_5_in_7 = NULL;
main_Scalar_5_in_8 = NULL;
main_Scalar_5_in_9 = NULL;
main_Scalar_5_in_10 = NULL;
main_Scalar_5_in_11 = NULL;
main_Scalar_5_out_1 = 0.25 ;
main_Integer_3_in_1 = "Integer_3";
main_Integer_3_in_2 = NULL;
main_Integer_3_in_3 = 20 ;
main_Integer_3_in_4 = NULL;
main_Integer_3_in_5 = NULL;
main_Integer_3_in_6 = NULL;
main_Integer_3_in_7 = NULL;
main_Integer_3_in_8 = NULL;
main_Integer_3_in_9 = NULL;
main_Integer_3_in_10 = NULL;
main_Integer_3_in_11 = NULL;
main_Integer_3_out_1 = 20 ;
main_String_5_out_1 = NULL;
main_Scalar_6_in_1 = "Scalar_6";
main_Scalar_6_in_2 = NULL;
main_Scalar_6_in_3 = 0.2 ;
main_Scalar_6_in_4 = NULL;
main_Scalar_6_in_5 = NULL;
main_Scalar_6_in_6 = NULL;
main_Scalar_6_in_7 = NULL;
main_Scalar_6_in_8 = NULL;
main_Scalar_6_in_9 = NULL;
main_Scalar_6_in_10 = NULL;
main_Scalar_6_in_11 = NULL;
main_Scalar_6_out_1 = 0.2 ;
main_Integer_4_in_1 = "Integer_4";
main_Integer_4_in_2 = NULL;
main_Integer_4_in_3 = 20 ;
main_Integer_4_in_4 = NULL;
main_Integer_4_in_5 = NULL;
main_Integer_4_in_6 = NULL;
main_Integer_4_in_7 = NULL;
main_Integer_4_in_8 = NULL;
main_Integer_4_in_9 = NULL;
main_Integer_4_in_10 = NULL;
main_Integer_4_in_11 = NULL;
main_Integer_4_out_1 = 20 ;
main_BallsAndSticks_1_in_2 = 1;
main_BallsAndSticks_1_in_6 = 2;
main_BallsAndSticks_1_out_1 = NULL;
main_Selector_1_in_1 = "Selector_1";
main_Selector_1_in_2 = "z" ;
main_Selector_1_in_3 = 2 ;
main_Selector_1_in_4 = NULL;
main_Selector_1_in_5 = NULL;
main_Selector_1_in_6 = NULL;
main_Selector_1_in_7 = NULL;
main_Selector_1_out_1 = 2 ;
main_Selector_1_out_2 = "z" ;
main_Compute_5_in_1 = "$0+1";
main_Compute_5_out_1 = NULL;
main_Transmitter_16_out_1 = NULL;
main_Receiver_12_out_1 = NULL;
main_Toggle_2_in_1 = "Toggle_2";
main_Toggle_2_in_2 = 0;
main_Toggle_2_in_3 = 0;
main_Toggle_2_in_4 = NULL;
main_Toggle_2_in_5 = NULL;
main_Toggle_2_in_6 = NULL;
main_Toggle_2_out_1 = 0;
main_String_6_out_1 = "a";
main_FileSelector_1_out_1 = NULL;
main_FileSelector_1_out_2 = NULL;
main_Inquire_8_in_2 = NULL;
main_Inquire_8_in_3 = NULL;
main_Inquire_8_out_1 = NULL;
main_Compute_20_in_1 = "$0==1?0:1";
main_Compute_20_out_1 = NULL;
main_Route_5_out_1 = NULL;
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = "dx";
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Transmitter_30_out_1 = NULL;
main_Receiver_24_out_1 = NULL;
main_FileSelector_7_out_1 = NULL;
main_Inquire_11_in_2 = NULL;
main_Inquire_11_in_3 = NULL;
main_Inquire_11_out_1 = NULL;
main_Compute_32_in_1 = "$0==1?2:1";
main_Compute_32_out_1 = NULL;
main_Compute_25_in_1 = "$0==1?0:1";
main_Compute_25_out_1 = NULL;
main_Route_11_out_1 = NULL;
main_Import_4_in_2 = NULL;
main_Import_4_in_3 = "dx";
main_Import_4_in_4 = NULL;
main_Import_4_in_5 = NULL;
main_Import_4_in_6 = NULL;
main_Import_4_out_1 = NULL;
main_Switch_5_out_1 = NULL;
main_FileSelector_8_out_1 = NULL;
main_Inquire_12_in_2 = NULL;
main_Inquire_12_in_3 = NULL;
main_Inquire_12_out_1 = NULL;
main_Compute_33_in_1 = "$0==1?2:1";
main_Compute_33_out_1 = NULL;
main_Compute_26_in_1 = "$0==1?0:1";
main_Compute_26_out_1 = NULL;
main_Route_12_out_1 = NULL;
main_Import_5_in_2 = NULL;
main_Import_5_in_3 = "dx";
main_Import_5_in_4 = NULL;
main_Import_5_in_5 = NULL;
main_Import_5_in_6 = NULL;
main_Import_5_out_1 = NULL;
main_Switch_6_out_1 = NULL;
main_FileSelector_9_out_1 = NULL;
main_Inquire_13_in_2 = NULL;
main_Inquire_13_in_3 = NULL;
main_Inquire_13_out_1 = NULL;
main_Compute_34_in_1 = "$0==1?2:1";
main_Compute_34_out_1 = NULL;
main_Compute_27_in_1 = "$0==1?0:1";
main_Compute_27_out_1 = NULL;
main_Route_13_out_1 = NULL;
main_Import_6_in_2 = NULL;
main_Import_6_in_3 = "dx";
main_Import_6_in_4 = NULL;
main_Import_6_in_5 = NULL;
main_Import_6_in_6 = NULL;
main_Import_6_out_1 = NULL;
main_Switch_7_out_1 = NULL;
main_FileSelector_10_out_1 = NULL;
main_Inquire_14_in_2 = NULL;
main_Inquire_14_in_3 = NULL;
main_Inquire_14_out_1 = NULL;
main_Compute_35_in_1 = "$0==1?2:1";
main_Compute_35_out_1 = NULL;
main_Compute_28_in_1 = "$0==1?0:1";
main_Compute_28_out_1 = NULL;
main_Route_14_out_1 = NULL;
main_Import_7_in_2 = NULL;
main_Import_7_in_3 = "dx";
main_Import_7_in_4 = NULL;
main_Import_7_in_5 = NULL;
main_Import_7_in_6 = NULL;
main_Import_7_out_1 = NULL;
main_Switch_8_out_1 = NULL;
main_FileSelector_11_out_1 = NULL;
main_Inquire_15_in_2 = NULL;
main_Inquire_15_in_3 = NULL;
main_Inquire_15_out_1 = NULL;
main_Compute_36_in_1 = "$0==1?2:1";
main_Compute_36_out_1 = NULL;
main_Compute_29_in_1 = "$0==1?0:1";
main_Compute_29_out_1 = NULL;
main_Route_15_out_1 = NULL;
main_Import_8_in_2 = NULL;
main_Import_8_in_3 = "dx";
main_Import_8_in_4 = NULL;
main_Import_8_in_5 = NULL;
main_Import_8_in_6 = NULL;
main_Import_8_out_1 = NULL;
main_Switch_9_out_1 = NULL;
main_Compute2_4_in_2 = NULL;
main_Compute2_4_in_4 = NULL;
main_Compute2_4_in_6 = NULL;
main_Compute2_4_in_8 = NULL;
main_Compute2_4_in_10 = NULL;
main_Compute2_4_in_12 = NULL;
main_Compute2_4_out_1 = NULL;
main_Transmitter_29_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_Route_3_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Extract_4_in_2 = "positions";
main_Extract_4_out_1 = NULL;
main_Inquire_3_in_2 = "grid counts";
main_Inquire_3_in_3 = NULL;
main_Inquire_3_out_1 = NULL;
main_Compute_1_in_1 = "$0.x";
main_Compute_1_out_1 = NULL;
main_Transmitter_5_out_1 = NULL;
main_Receiver_7_out_1 = NULL;
main_Compute_2_in_1 = "$0.y";
main_Compute_2_out_1 = NULL;
main_Transmitter_6_out_1 = NULL;
main_Receiver_8_out_1 = NULL;
main_Compute_3_in_1 = "$0.z";
main_Compute_3_out_1 = NULL;
main_Transmitter_7_out_1 = NULL;
main_Receiver_9_out_1 = NULL;
main_Switch_3_out_1 = NULL;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_4 = NULL;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 1 37 1 1 37 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 1;
@nextframe  = @startframe;
@endframe   = 37;
@deltaframe = 1;
main_Compute_6_in_1 = "$0-1";
main_Compute_6_out_1 = NULL;
main_Slab_2_in_4 = NULL;
main_Slab_2_out_1 = NULL;
main_Transmitter_19_out_1 = NULL;
main_Receiver_11_out_1 = NULL;
main_Inquire_7_in_2 = "origin";
main_Inquire_7_in_3 = NULL;
main_Inquire_7_out_1 = NULL;
main_Compute_16_in_1 = "$0.x";
main_Compute_16_out_1 = NULL;
main_Compute_17_in_1 = "$0.y";
main_Compute_17_out_1 = NULL;
main_Compute_18_in_1 = "$0.z";
main_Compute_18_out_1 = NULL;
main_Switch_4_out_1 = NULL;
main_Transmitter_17_out_1 = NULL;
main_Receiver_13_out_1 = NULL;
main_Format_6_in_1 = "%s = %g";
main_Format_6_out_1 = NULL;
main_Caption_1_in_2 = NULL;
main_Caption_1_in_3 = NULL;
main_Caption_1_in_4 = NULL;
main_Caption_1_in_5 = NULL;
main_Caption_1_in_6 = NULL;
main_Caption_1_in_7 = NULL;
main_Caption_1_in_8 = NULL;
main_Caption_1_in_9 = NULL;
main_Caption_1_out_1 = NULL;
main_Toggle_1_in_1 = "Toggle_1";
main_Toggle_1_in_2 = 0;
main_Toggle_1_in_3 = 0;
main_Toggle_1_in_4 = NULL;
main_Toggle_1_in_5 = NULL;
main_Toggle_1_in_6 = NULL;
main_Toggle_1_out_1 = 0;
main_Statistics_2_out_1 = NULL;
main_Statistics_2_out_4 = NULL;
main_Statistics_2_out_5 = NULL;
main_Transmitter_3_out_1 = NULL;
main_Receiver_5_out_1 = NULL;
main_Transmitter_4_out_1 = NULL;
main_Receiver_6_out_1 = NULL;
main_Colormap_2_in_1 = { [0.0 0.65263158] [1.0 0.0] };
main_Colormap_2_in_2 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_3 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_5 = "Colormap_2";
main_Colormap_2_in_9 = NULL;
main_Colormap_2_in_10 = NULL;
main_Colormap_2_in_11 = NULL;
main_Colormap_2_in_12 = { 0.0 0.24403083 };
main_Colormap_2_in_13 = NULL;
main_Colormap_2_in_14 = NULL;
main_Colormap_2_in_15 = NULL;
main_Colormap_2_in_16 = NULL;
main_Colormap_2_in_17 = 0.0;
main_Colormap_2_in_18 = 0.24403083;
main_Colormap_2_in_19 = NULL;
main_Colormap_2_out_1 = NULL;
main_Color_2_in_3 = NULL;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_ColorBar_1_in_2 = NULL;
main_ColorBar_1_in_3 = NULL;
main_ColorBar_1_in_4 = NULL;
main_ColorBar_1_in_5 = NULL;
main_ColorBar_1_in_6 = NULL;
main_ColorBar_1_in_7 = NULL;
main_ColorBar_1_in_8 = NULL;
main_ColorBar_1_in_9 = NULL;
main_ColorBar_1_in_10 = NULL;
main_ColorBar_1_in_11 = NULL;
main_ColorBar_1_in_12 = NULL;
main_ColorBar_1_in_13 = NULL;
main_ColorBar_1_in_14 = NULL;
main_ColorBar_1_in_15 = NULL;
main_ColorBar_1_in_16 = NULL;
main_ColorBar_1_out_1 = NULL;
main_Integer_2_in_1 = "Integer_2";
main_Integer_2_in_2 = NULL;
main_Integer_2_in_3 = 3 ;
main_Integer_2_in_4 = NULL;
main_Integer_2_in_5 = NULL;
main_Integer_2_in_6 = NULL;
main_Integer_2_in_7 = NULL;
main_Integer_2_in_8 = NULL;
main_Integer_2_in_9 = NULL;
main_Integer_2_in_10 = NULL;
main_Integer_2_in_11 = NULL;
main_Integer_2_out_1 = 3 ;
main_Compute_19_in_1 = "$0>0?1:0";
main_Compute_19_out_1 = NULL;
main_Route_1_out_1 = NULL;
main_Isosurface_3_in_2 = NULL;
main_Isosurface_3_in_4 = NULL;
main_Isosurface_3_in_5 = NULL;
main_Isosurface_3_in_6 = NULL;
main_Isosurface_3_out_1 = NULL;
main_Transmitter_21_out_1 = NULL;
main_Receiver_15_out_1 = NULL;
main_Collect_2_out_1 = NULL;
main_Transmitter_20_out_1 = NULL;
main_Receiver_10_out_1 = NULL;
main_Route_4_out_1 = NULL;
main_Transmitter_25_out_1 = NULL;
main_Receiver_19_out_1 = NULL;
main_Toggle_6_in_1 = "Toggle_6";
main_Toggle_6_in_2 = 0;
main_Toggle_6_in_3 = 0;
main_Toggle_6_in_4 = NULL;
main_Toggle_6_in_5 = NULL;
main_Toggle_6_in_6 = NULL;
main_Toggle_6_out_1 = 0;
main_FileSelector_3_out_1 = NULL;
main_Inquire_9_in_2 = "is null";
main_Inquire_9_in_3 = NULL;
main_Inquire_9_out_1 = NULL;
main_Compute_23_in_1 = "$0==1?0:1";
main_Compute_23_out_1 = NULL;
main_Compute_22_in_1 = "$0*$1*$2";
main_Compute_22_out_1 = NULL;
main_Compute_21_in_1 = "$0==1?1:2";
main_Compute_21_out_1 = NULL;
main_Transmitter_24_out_1 = NULL;
main_Receiver_17_out_1 = NULL;
main_Receiver_2_out_1 = NULL;
main_Route_2_out_1 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_3 = 0.08 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = 0.08 ;
main_Isosurface_1_in_3 = NULL;
main_Isosurface_1_in_4 = NULL;
main_Isosurface_1_in_5 = NULL;
main_Isosurface_1_in_6 = NULL;
main_Isosurface_1_out_1 = NULL;
main_Route_8_out_1 = NULL;
main_Route_8_out_2 = NULL;
main_Transmitter_26_out_1 = NULL;
main_Receiver_21_out_1 = NULL;
main_Route_7_out_1 = NULL;
main_Import_2_in_2 = NULL;
main_Import_2_in_3 = "dx";
main_Import_2_in_4 = NULL;
main_Import_2_in_5 = NULL;
main_Import_2_in_6 = NULL;
main_Import_2_out_1 = NULL;
main_Transmitter_23_out_1 = NULL;
main_Receiver_20_out_1 = NULL;
main_Map_2_in_3 = NULL;
main_Map_2_in_4 = NULL;
main_Map_2_out_1 = NULL;
main_Colormap_3_in_1 = { [0.0 0.666667] [1.0 0.0] };
main_Colormap_3_in_2 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_3_in_3 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_3_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_3_in_5 = "Colormap_3";
main_Colormap_3_in_7 = NULL;
main_Colormap_3_in_8 = NULL;
main_Colormap_3_in_9 = NULL;
main_Colormap_3_in_10 = NULL;
main_Colormap_3_in_11 = NULL;
main_Colormap_3_in_12 = { -13.001743 -4.5772276 };
main_Colormap_3_in_13 = NULL;
main_Colormap_3_in_14 = NULL;
main_Colormap_3_in_15 = NULL;
main_Colormap_3_in_16 = NULL;
main_Colormap_3_in_17 = -13.001743;
main_Colormap_3_in_18 = -4.5772276;
main_Colormap_3_in_19 = NULL;
main_Colormap_3_out_1 = NULL;
main_Scalar_7_in_1 = "Scalar_7";
main_Scalar_7_in_2 = NULL;
main_Scalar_7_in_3 = 0.5 ;
main_Scalar_7_in_4 = NULL;
main_Scalar_7_in_5 = NULL;
main_Scalar_7_in_6 = NULL;
main_Scalar_7_in_7 = NULL;
main_Scalar_7_in_8 = NULL;
main_Scalar_7_in_9 = NULL;
main_Scalar_7_in_10 = NULL;
main_Scalar_7_in_11 = NULL;
main_Scalar_7_out_1 = 0.5 ;
main_Color_42_in_4 = NULL;
main_Color_42_in_5 = NULL;
main_Color_42_out_1 = NULL;
main_Toggle_8_in_1 = "Toggle_8";
main_Toggle_8_in_2 = 0;
main_Toggle_8_in_3 = 0;
main_Toggle_8_in_4 = NULL;
main_Toggle_8_in_5 = NULL;
main_Toggle_8_in_6 = NULL;
main_Toggle_8_out_1 = 0;
main_ColorBar_2_in_2 = NULL;
main_ColorBar_2_in_3 = NULL;
main_ColorBar_2_in_4 = NULL;
main_ColorBar_2_in_5 = NULL;
main_ColorBar_2_in_6 = NULL;
main_ColorBar_2_in_7 = NULL;
main_ColorBar_2_in_8 = NULL;
main_ColorBar_2_in_9 = {"black"};
main_ColorBar_2_in_10 = NULL;
main_ColorBar_2_in_11 = NULL;
main_ColorBar_2_in_12 = NULL;
main_ColorBar_2_in_13 = NULL;
main_ColorBar_2_in_14 = NULL;
main_ColorBar_2_in_15 = NULL;
main_ColorBar_2_in_16 = NULL;
main_ColorBar_2_out_1 = NULL;
main_Route_9_out_1 = NULL;
main_Collect_3_out_1 = NULL;
main_Transmitter_27_out_1 = NULL;
main_Receiver_22_out_1 = NULL;
main_String_2_out_1 = "red";
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 0.38 ;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = NULL;
main_Scalar_3_in_6 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = NULL;
main_Scalar_3_out_1 = 0.38 ;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Transmitter_22_out_1 = NULL;
main_Receiver_16_out_1 = NULL;
main_Collect_1_out_1 = NULL;
main_Inquire_4_in_2 = "deltas";
main_Inquire_4_in_3 = NULL;
main_Inquire_4_out_1 = NULL;
main_Select_1_in_2 = 0;
main_Select_1_in_3 = NULL;
main_Select_1_out_1 = NULL;
main_Compute_11_in_1 = "$0.0";
main_Compute_11_out_1 = NULL;
main_Select_2_in_2 = 1;
main_Select_2_in_3 = NULL;
main_Select_2_out_1 = NULL;
main_Compute_12_in_1 = "$0.1";
main_Compute_12_out_1 = NULL;
main_Select_3_in_2 = 2;
main_Select_3_in_3 = NULL;
main_Select_3_out_1 = NULL;
main_Compute_13_in_1 = "$0.2";
main_Compute_13_out_1 = NULL;
main_Toggle_9_in_1 = "Toggle_9";
main_Toggle_9_in_2 = 0;
main_Toggle_9_in_3 = 0;
main_Toggle_9_in_4 = NULL;
main_Toggle_9_in_5 = NULL;
main_Toggle_9_in_6 = NULL;
main_Toggle_9_out_1 = 0;
main_Compute_30_in_1 = "$0==1?2:1";
main_Extract_3_in_2 = NULL;
main_Extract_3_out_1 = NULL;
main_Transmitter_8_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_Format_3_in_1 = "Number of grid points: [%d,%d,%d]";
main_Format_3_out_1 = NULL;
main_Format_5_in_1 = "Mean, min, max = %g,%g,%g";
main_Format_5_out_1 = NULL;
main_Inquire_2_in_2 = "category";
main_Inquire_2_in_3 = NULL;
main_Inquire_2_out_1 = NULL;
main_Format_4_in_1 = "The function is %s";
main_Format_4_in_3 = NULL;
main_Format_4_out_1 = NULL;
main_Format_7_in_1 = "Deltas: %g";
main_Format_7_out_1 = NULL;
main_Inquire_5_in_2 = "origin";
main_Inquire_5_in_3 = NULL;
main_Inquire_5_out_1 = NULL;
main_Format_8_in_1 = "Origin: %g";
main_Format_8_out_1 = NULL;
main_Format_2_in_1 = "echo '%s\n**********\n%s\n%s\n%s\n%s\n%s'>dxstat.%s";
main_Format_2_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_1_in_1 = "Image_1";
main_Image_1_in_3 = "X24,,Isosurface";
main_Image_1_in_4 = 1;
main_Image_1_in_5 = [0.0524121 -0.0253785 0.0152077];
main_Image_1_in_6 = [1.71024 -3.6695 -50.6466];
main_Image_1_in_7 = 5.44694;
main_Image_1_in_8 = 640;
main_Image_1_in_9 = 0.750781;
main_Image_1_in_10 = [0.039365 0.996741 -0.0704078];
main_Image_1_in_11 = NULL;
main_Image_1_in_12 = 0;
main_Image_1_in_13 = NULL;
main_Image_1_in_14 = 1;
main_Image_1_in_15 = NULL;
main_Image_1_in_16 = NULL;
main_Image_1_in_17 = NULL;
main_Image_1_in_18 = NULL;
main_Image_1_in_19 = 0;
main_Image_1_in_20 = NULL;
main_Image_1_in_21 = NULL;
main_Image_1_in_22 = "white";
main_Image_1_in_23 = NULL;
main_Image_1_in_25 = NULL;
main_Image_1_in_26 = NULL;
main_Image_1_in_27 = NULL;
main_Image_1_in_28 = NULL;
main_Image_1_in_29 = NULL;
main_Image_1_in_30 = NULL;
main_Image_1_in_31 = NULL;
main_Image_1_in_32 = NULL;
main_Image_1_in_33 = NULL;
main_Image_1_in_34 = NULL;
main_Image_1_in_35 = NULL;
main_Image_1_in_36 = NULL;
main_Image_1_in_37 = NULL;
main_Image_1_in_38 = NULL;
main_Image_1_in_39 = NULL;
main_Image_1_in_40 = NULL;
main_Image_1_in_41 = "rotate";
main_Image_1_in_42 = "Isosurface";
main_Image_1_in_43 = NULL;
main_Image_1_in_44 = NULL;
main_Image_1_in_45 = NULL;
main_Image_1_in_46 = NULL;
main_Image_1_in_47 = NULL;
main_Image_1_in_48 = NULL;
main_Image_1_in_49 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_2_in_1 = "Image_2";
main_Image_2_in_3 = "X24,,Slab";
main_Image_2_in_4 = 1;
main_Image_2_in_5 = [6.19888e-06 -2.38419e-07 -6];
main_Image_2_in_6 = [6.19888e-06 -2.38419e-07 29.1437];
main_Image_2_in_7 = NULL;
main_Image_2_in_8 = 640;
main_Image_2_in_9 = 0.872656;
main_Image_2_in_10 = [0 1 0];
main_Image_2_in_11 = 30.0;
main_Image_2_in_12 = 1;
main_Image_2_in_13 = NULL;
main_Image_2_in_14 = 1;
main_Image_2_in_15 = NULL;
main_Image_2_in_16 = NULL;
main_Image_2_in_17 = NULL;
main_Image_2_in_18 = NULL;
main_Image_2_in_19 = 0;
main_Image_2_in_20 = NULL;
main_Image_2_in_21 = NULL;
main_Image_2_in_22 = NULL;
main_Image_2_in_23 = NULL;
main_Image_2_in_25 = NULL;
main_Image_2_in_26 = NULL;
main_Image_2_in_27 = NULL;
main_Image_2_in_28 = NULL;
main_Image_2_in_29 = 0;
main_Image_2_in_30 = NULL;
main_Image_2_in_31 = NULL;
main_Image_2_in_32 = NULL;
main_Image_2_in_33 = 0;
main_Image_2_in_34 = NULL;
main_Image_2_in_35 = NULL;
main_Image_2_in_36 = 0;
main_Image_2_in_37 = NULL;
main_Image_2_in_38 = NULL;
main_Image_2_in_39 = NULL;
main_Image_2_in_40 = NULL;
main_Image_2_in_41 = "none";
main_Image_2_in_42 = "Slab";
main_Image_2_in_43 = NULL;
main_Image_2_in_44 = NULL;
main_Image_2_in_45 = NULL;
main_Image_2_in_46 = NULL;
main_Image_2_in_47 = NULL;
main_Image_2_in_48 = NULL;
main_Image_2_in_49 = NULL;
main_Toggle_3_in_1 = "Toggle_3";
main_Toggle_3_in_2 = 0;
main_Toggle_3_in_3 = 0;
main_Toggle_3_in_4 = NULL;
main_Toggle_3_in_5 = NULL;
main_Toggle_3_in_6 = NULL;
main_Toggle_3_out_1 = 0;
main_ManageColormapEditor_1_in_1 = {"Slab colormap"};
main_ManageColormapEditor_1_in_3 = NULL;
main_Toggle_7_in_1 = "Toggle_7";
main_Toggle_7_in_2 = 0;
main_Toggle_7_in_3 = 0;
main_Toggle_7_in_4 = NULL;
main_Toggle_7_in_5 = NULL;
main_Toggle_7_in_6 = NULL;
main_Toggle_7_out_1 = 0;
main_ManageColormapEditor_2_in_1 = {"Mapped function colormap"};
main_ManageColormapEditor_2_in_3 = NULL;
main_Toggle_5_in_1 = "Toggle_5";
main_Toggle_5_in_2 = 0;
main_Toggle_5_in_3 = 0;
main_Toggle_5_in_4 = NULL;
main_Toggle_5_in_5 = NULL;
main_Toggle_5_in_6 = NULL;
main_Toggle_5_out_1 = 0;
main_ManageControlPanel_1_in_1 = {"Geometry details"};
main_ManageControlPanel_2_in_1 = {"Mapping function"};
main_ManageControlPanel_3_in_1 = {"Multiple Functions Import"};
main_ManageImageWindow_3_in_1 = {"Slab"};
main_ManageImageWindow_3_in_3 = NULL;
main_ManageImageWindow_4_in_1 = {"Isosurface"};
main_ManageImageWindow_4_in_3 = NULL;
Executive("product version 4 3 2");
$sync

sequence main();
play;
